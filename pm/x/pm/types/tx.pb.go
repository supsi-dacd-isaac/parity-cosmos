// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pm/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateDso struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Idx     string `protobuf:"bytes,3,opt,name=idx,proto3" json:"idx,omitempty"`
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgCreateDso) Reset()         { *m = MsgCreateDso{} }
func (m *MsgCreateDso) String() string { return proto.CompactTextString(m) }
func (*MsgCreateDso) ProtoMessage()    {}
func (*MsgCreateDso) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{0}
}
func (m *MsgCreateDso) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateDso) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateDso.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateDso) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateDso.Merge(m, src)
}
func (m *MsgCreateDso) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateDso) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateDso.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateDso proto.InternalMessageInfo

func (m *MsgCreateDso) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateDso) GetIdx() string {
	if m != nil {
		return m.Idx
	}
	return ""
}

func (m *MsgCreateDso) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgCreateDsoResponse struct {
}

func (m *MsgCreateDsoResponse) Reset()         { *m = MsgCreateDsoResponse{} }
func (m *MsgCreateDsoResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateDsoResponse) ProtoMessage()    {}
func (*MsgCreateDsoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{1}
}
func (m *MsgCreateDsoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateDsoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateDsoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateDsoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateDsoResponse.Merge(m, src)
}
func (m *MsgCreateDsoResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateDsoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateDsoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateDsoResponse proto.InternalMessageInfo

type MsgUpdateDso struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Idx     string `protobuf:"bytes,3,opt,name=idx,proto3" json:"idx,omitempty"`
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgUpdateDso) Reset()         { *m = MsgUpdateDso{} }
func (m *MsgUpdateDso) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDso) ProtoMessage()    {}
func (*MsgUpdateDso) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{2}
}
func (m *MsgUpdateDso) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDso) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDso.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDso) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDso.Merge(m, src)
}
func (m *MsgUpdateDso) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDso) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDso.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDso proto.InternalMessageInfo

func (m *MsgUpdateDso) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateDso) GetIdx() string {
	if m != nil {
		return m.Idx
	}
	return ""
}

func (m *MsgUpdateDso) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgUpdateDsoResponse struct {
}

func (m *MsgUpdateDsoResponse) Reset()         { *m = MsgUpdateDsoResponse{} }
func (m *MsgUpdateDsoResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDsoResponse) ProtoMessage()    {}
func (*MsgUpdateDsoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{3}
}
func (m *MsgUpdateDsoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDsoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDsoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDsoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDsoResponse.Merge(m, src)
}
func (m *MsgUpdateDsoResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDsoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDsoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDsoResponse proto.InternalMessageInfo

type MsgDeleteDso struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgDeleteDso) Reset()         { *m = MsgDeleteDso{} }
func (m *MsgDeleteDso) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteDso) ProtoMessage()    {}
func (*MsgDeleteDso) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{4}
}
func (m *MsgDeleteDso) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteDso) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteDso.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteDso) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteDso.Merge(m, src)
}
func (m *MsgDeleteDso) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteDso) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteDso.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteDso proto.InternalMessageInfo

func (m *MsgDeleteDso) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgDeleteDsoResponse struct {
}

func (m *MsgDeleteDsoResponse) Reset()         { *m = MsgDeleteDsoResponse{} }
func (m *MsgDeleteDsoResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteDsoResponse) ProtoMessage()    {}
func (*MsgDeleteDsoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{5}
}
func (m *MsgDeleteDsoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteDsoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteDsoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteDsoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteDsoResponse.Merge(m, src)
}
func (m *MsgDeleteDsoResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteDsoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteDsoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteDsoResponse proto.InternalMessageInfo

type MsgCreateAggregator struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Idx     string `protobuf:"bytes,3,opt,name=idx,proto3" json:"idx,omitempty"`
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgCreateAggregator) Reset()         { *m = MsgCreateAggregator{} }
func (m *MsgCreateAggregator) String() string { return proto.CompactTextString(m) }
func (*MsgCreateAggregator) ProtoMessage()    {}
func (*MsgCreateAggregator) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{6}
}
func (m *MsgCreateAggregator) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateAggregator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAggregator.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateAggregator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAggregator.Merge(m, src)
}
func (m *MsgCreateAggregator) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateAggregator) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAggregator.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateAggregator proto.InternalMessageInfo

func (m *MsgCreateAggregator) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateAggregator) GetIdx() string {
	if m != nil {
		return m.Idx
	}
	return ""
}

func (m *MsgCreateAggregator) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgCreateAggregatorResponse struct {
}

func (m *MsgCreateAggregatorResponse) Reset()         { *m = MsgCreateAggregatorResponse{} }
func (m *MsgCreateAggregatorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateAggregatorResponse) ProtoMessage()    {}
func (*MsgCreateAggregatorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{7}
}
func (m *MsgCreateAggregatorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateAggregatorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAggregatorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateAggregatorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAggregatorResponse.Merge(m, src)
}
func (m *MsgCreateAggregatorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateAggregatorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAggregatorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateAggregatorResponse proto.InternalMessageInfo

type MsgUpdateAggregator struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Idx     string `protobuf:"bytes,3,opt,name=idx,proto3" json:"idx,omitempty"`
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgUpdateAggregator) Reset()         { *m = MsgUpdateAggregator{} }
func (m *MsgUpdateAggregator) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateAggregator) ProtoMessage()    {}
func (*MsgUpdateAggregator) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{8}
}
func (m *MsgUpdateAggregator) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateAggregator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateAggregator.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateAggregator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateAggregator.Merge(m, src)
}
func (m *MsgUpdateAggregator) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateAggregator) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateAggregator.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateAggregator proto.InternalMessageInfo

func (m *MsgUpdateAggregator) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateAggregator) GetIdx() string {
	if m != nil {
		return m.Idx
	}
	return ""
}

func (m *MsgUpdateAggregator) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgUpdateAggregatorResponse struct {
}

func (m *MsgUpdateAggregatorResponse) Reset()         { *m = MsgUpdateAggregatorResponse{} }
func (m *MsgUpdateAggregatorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateAggregatorResponse) ProtoMessage()    {}
func (*MsgUpdateAggregatorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{9}
}
func (m *MsgUpdateAggregatorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateAggregatorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateAggregatorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateAggregatorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateAggregatorResponse.Merge(m, src)
}
func (m *MsgUpdateAggregatorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateAggregatorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateAggregatorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateAggregatorResponse proto.InternalMessageInfo

type MsgDeleteAggregator struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgDeleteAggregator) Reset()         { *m = MsgDeleteAggregator{} }
func (m *MsgDeleteAggregator) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteAggregator) ProtoMessage()    {}
func (*MsgDeleteAggregator) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{10}
}
func (m *MsgDeleteAggregator) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteAggregator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteAggregator.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteAggregator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteAggregator.Merge(m, src)
}
func (m *MsgDeleteAggregator) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteAggregator) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteAggregator.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteAggregator proto.InternalMessageInfo

func (m *MsgDeleteAggregator) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgDeleteAggregatorResponse struct {
}

func (m *MsgDeleteAggregatorResponse) Reset()         { *m = MsgDeleteAggregatorResponse{} }
func (m *MsgDeleteAggregatorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteAggregatorResponse) ProtoMessage()    {}
func (*MsgDeleteAggregatorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{11}
}
func (m *MsgDeleteAggregatorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteAggregatorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteAggregatorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteAggregatorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteAggregatorResponse.Merge(m, src)
}
func (m *MsgDeleteAggregatorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteAggregatorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteAggregatorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteAggregatorResponse proto.InternalMessageInfo

type MsgCreatePlayer struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Idx     string `protobuf:"bytes,3,opt,name=idx,proto3" json:"idx,omitempty"`
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Role    string `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
}

func (m *MsgCreatePlayer) Reset()         { *m = MsgCreatePlayer{} }
func (m *MsgCreatePlayer) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePlayer) ProtoMessage()    {}
func (*MsgCreatePlayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{12}
}
func (m *MsgCreatePlayer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePlayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePlayer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePlayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePlayer.Merge(m, src)
}
func (m *MsgCreatePlayer) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePlayer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePlayer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePlayer proto.InternalMessageInfo

func (m *MsgCreatePlayer) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreatePlayer) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgCreatePlayer) GetIdx() string {
	if m != nil {
		return m.Idx
	}
	return ""
}

func (m *MsgCreatePlayer) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgCreatePlayer) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

type MsgCreatePlayerResponse struct {
}

func (m *MsgCreatePlayerResponse) Reset()         { *m = MsgCreatePlayerResponse{} }
func (m *MsgCreatePlayerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePlayerResponse) ProtoMessage()    {}
func (*MsgCreatePlayerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{13}
}
func (m *MsgCreatePlayerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePlayerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePlayerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePlayerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePlayerResponse.Merge(m, src)
}
func (m *MsgCreatePlayerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePlayerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePlayerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePlayerResponse proto.InternalMessageInfo

type MsgUpdatePlayer struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Idx     string `protobuf:"bytes,3,opt,name=idx,proto3" json:"idx,omitempty"`
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Role    string `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
}

func (m *MsgUpdatePlayer) Reset()         { *m = MsgUpdatePlayer{} }
func (m *MsgUpdatePlayer) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePlayer) ProtoMessage()    {}
func (*MsgUpdatePlayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{14}
}
func (m *MsgUpdatePlayer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePlayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePlayer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePlayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePlayer.Merge(m, src)
}
func (m *MsgUpdatePlayer) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePlayer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePlayer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePlayer proto.InternalMessageInfo

func (m *MsgUpdatePlayer) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdatePlayer) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgUpdatePlayer) GetIdx() string {
	if m != nil {
		return m.Idx
	}
	return ""
}

func (m *MsgUpdatePlayer) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgUpdatePlayer) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

type MsgUpdatePlayerResponse struct {
}

func (m *MsgUpdatePlayerResponse) Reset()         { *m = MsgUpdatePlayerResponse{} }
func (m *MsgUpdatePlayerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePlayerResponse) ProtoMessage()    {}
func (*MsgUpdatePlayerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{15}
}
func (m *MsgUpdatePlayerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePlayerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePlayerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePlayerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePlayerResponse.Merge(m, src)
}
func (m *MsgUpdatePlayerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePlayerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePlayerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePlayerResponse proto.InternalMessageInfo

type MsgDeletePlayer struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgDeletePlayer) Reset()         { *m = MsgDeletePlayer{} }
func (m *MsgDeletePlayer) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePlayer) ProtoMessage()    {}
func (*MsgDeletePlayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{16}
}
func (m *MsgDeletePlayer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePlayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePlayer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePlayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePlayer.Merge(m, src)
}
func (m *MsgDeletePlayer) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePlayer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePlayer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePlayer proto.InternalMessageInfo

func (m *MsgDeletePlayer) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeletePlayer) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgDeletePlayerResponse struct {
}

func (m *MsgDeletePlayerResponse) Reset()         { *m = MsgDeletePlayerResponse{} }
func (m *MsgDeletePlayerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePlayerResponse) ProtoMessage()    {}
func (*MsgDeletePlayerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{17}
}
func (m *MsgDeletePlayerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePlayerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePlayerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePlayerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePlayerResponse.Merge(m, src)
}
func (m *MsgDeletePlayerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePlayerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePlayerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePlayerResponse proto.InternalMessageInfo

type MsgCreateLem struct {
	Creator string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string   `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Start   int32    `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	End     int32    `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
	Params  []string `protobuf:"bytes,5,rep,name=params,proto3" json:"params,omitempty"`
	Players []string `protobuf:"bytes,6,rep,name=players,proto3" json:"players,omitempty"`
}

func (m *MsgCreateLem) Reset()         { *m = MsgCreateLem{} }
func (m *MsgCreateLem) String() string { return proto.CompactTextString(m) }
func (*MsgCreateLem) ProtoMessage()    {}
func (*MsgCreateLem) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{18}
}
func (m *MsgCreateLem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateLem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateLem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateLem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateLem.Merge(m, src)
}
func (m *MsgCreateLem) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateLem) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateLem.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateLem proto.InternalMessageInfo

func (m *MsgCreateLem) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateLem) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgCreateLem) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *MsgCreateLem) GetEnd() int32 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *MsgCreateLem) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *MsgCreateLem) GetPlayers() []string {
	if m != nil {
		return m.Players
	}
	return nil
}

type MsgCreateLemResponse struct {
}

func (m *MsgCreateLemResponse) Reset()         { *m = MsgCreateLemResponse{} }
func (m *MsgCreateLemResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateLemResponse) ProtoMessage()    {}
func (*MsgCreateLemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{19}
}
func (m *MsgCreateLemResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateLemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateLemResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateLemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateLemResponse.Merge(m, src)
}
func (m *MsgCreateLemResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateLemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateLemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateLemResponse proto.InternalMessageInfo

type MsgUpdateLem struct {
	Creator string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string   `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Start   int32    `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	End     int32    `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
	Params  []string `protobuf:"bytes,5,rep,name=params,proto3" json:"params,omitempty"`
	Players []string `protobuf:"bytes,6,rep,name=players,proto3" json:"players,omitempty"`
}

func (m *MsgUpdateLem) Reset()         { *m = MsgUpdateLem{} }
func (m *MsgUpdateLem) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateLem) ProtoMessage()    {}
func (*MsgUpdateLem) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{20}
}
func (m *MsgUpdateLem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateLem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateLem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateLem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateLem.Merge(m, src)
}
func (m *MsgUpdateLem) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateLem) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateLem.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateLem proto.InternalMessageInfo

func (m *MsgUpdateLem) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateLem) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgUpdateLem) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *MsgUpdateLem) GetEnd() int32 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *MsgUpdateLem) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *MsgUpdateLem) GetPlayers() []string {
	if m != nil {
		return m.Players
	}
	return nil
}

type MsgUpdateLemResponse struct {
}

func (m *MsgUpdateLemResponse) Reset()         { *m = MsgUpdateLemResponse{} }
func (m *MsgUpdateLemResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateLemResponse) ProtoMessage()    {}
func (*MsgUpdateLemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{21}
}
func (m *MsgUpdateLemResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateLemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateLemResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateLemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateLemResponse.Merge(m, src)
}
func (m *MsgUpdateLemResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateLemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateLemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateLemResponse proto.InternalMessageInfo

type MsgDeleteLem struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgDeleteLem) Reset()         { *m = MsgDeleteLem{} }
func (m *MsgDeleteLem) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteLem) ProtoMessage()    {}
func (*MsgDeleteLem) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{22}
}
func (m *MsgDeleteLem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteLem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteLem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteLem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteLem.Merge(m, src)
}
func (m *MsgDeleteLem) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteLem) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteLem.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteLem proto.InternalMessageInfo

func (m *MsgDeleteLem) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteLem) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgDeleteLemResponse struct {
}

func (m *MsgDeleteLemResponse) Reset()         { *m = MsgDeleteLemResponse{} }
func (m *MsgDeleteLemResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteLemResponse) ProtoMessage()    {}
func (*MsgDeleteLemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{23}
}
func (m *MsgDeleteLemResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteLemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteLemResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteLemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteLemResponse.Merge(m, src)
}
func (m *MsgDeleteLemResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteLemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteLemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteLemResponse proto.InternalMessageInfo

type MsgCreateLemMeasure struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index     string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Player    string `protobuf:"bytes,3,opt,name=player,proto3" json:"player,omitempty"`
	Signal    string `protobuf:"bytes,4,opt,name=signal,proto3" json:"signal,omitempty"`
	Timestamp int32  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value     string `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	Mu        string `protobuf:"bytes,7,opt,name=mu,proto3" json:"mu,omitempty"`
}

func (m *MsgCreateLemMeasure) Reset()         { *m = MsgCreateLemMeasure{} }
func (m *MsgCreateLemMeasure) String() string { return proto.CompactTextString(m) }
func (*MsgCreateLemMeasure) ProtoMessage()    {}
func (*MsgCreateLemMeasure) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{24}
}
func (m *MsgCreateLemMeasure) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateLemMeasure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateLemMeasure.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateLemMeasure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateLemMeasure.Merge(m, src)
}
func (m *MsgCreateLemMeasure) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateLemMeasure) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateLemMeasure.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateLemMeasure proto.InternalMessageInfo

func (m *MsgCreateLemMeasure) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateLemMeasure) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgCreateLemMeasure) GetPlayer() string {
	if m != nil {
		return m.Player
	}
	return ""
}

func (m *MsgCreateLemMeasure) GetSignal() string {
	if m != nil {
		return m.Signal
	}
	return ""
}

func (m *MsgCreateLemMeasure) GetTimestamp() int32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MsgCreateLemMeasure) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *MsgCreateLemMeasure) GetMu() string {
	if m != nil {
		return m.Mu
	}
	return ""
}

type MsgCreateLemMeasureResponse struct {
}

func (m *MsgCreateLemMeasureResponse) Reset()         { *m = MsgCreateLemMeasureResponse{} }
func (m *MsgCreateLemMeasureResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateLemMeasureResponse) ProtoMessage()    {}
func (*MsgCreateLemMeasureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{25}
}
func (m *MsgCreateLemMeasureResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateLemMeasureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateLemMeasureResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateLemMeasureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateLemMeasureResponse.Merge(m, src)
}
func (m *MsgCreateLemMeasureResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateLemMeasureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateLemMeasureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateLemMeasureResponse proto.InternalMessageInfo

type MsgUpdateLemMeasure struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index     string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Player    string `protobuf:"bytes,3,opt,name=player,proto3" json:"player,omitempty"`
	Signal    string `protobuf:"bytes,4,opt,name=signal,proto3" json:"signal,omitempty"`
	Timestamp int32  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value     string `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	Mu        string `protobuf:"bytes,7,opt,name=mu,proto3" json:"mu,omitempty"`
}

func (m *MsgUpdateLemMeasure) Reset()         { *m = MsgUpdateLemMeasure{} }
func (m *MsgUpdateLemMeasure) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateLemMeasure) ProtoMessage()    {}
func (*MsgUpdateLemMeasure) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{26}
}
func (m *MsgUpdateLemMeasure) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateLemMeasure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateLemMeasure.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateLemMeasure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateLemMeasure.Merge(m, src)
}
func (m *MsgUpdateLemMeasure) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateLemMeasure) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateLemMeasure.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateLemMeasure proto.InternalMessageInfo

func (m *MsgUpdateLemMeasure) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateLemMeasure) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgUpdateLemMeasure) GetPlayer() string {
	if m != nil {
		return m.Player
	}
	return ""
}

func (m *MsgUpdateLemMeasure) GetSignal() string {
	if m != nil {
		return m.Signal
	}
	return ""
}

func (m *MsgUpdateLemMeasure) GetTimestamp() int32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MsgUpdateLemMeasure) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *MsgUpdateLemMeasure) GetMu() string {
	if m != nil {
		return m.Mu
	}
	return ""
}

type MsgUpdateLemMeasureResponse struct {
}

func (m *MsgUpdateLemMeasureResponse) Reset()         { *m = MsgUpdateLemMeasureResponse{} }
func (m *MsgUpdateLemMeasureResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateLemMeasureResponse) ProtoMessage()    {}
func (*MsgUpdateLemMeasureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{27}
}
func (m *MsgUpdateLemMeasureResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateLemMeasureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateLemMeasureResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateLemMeasureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateLemMeasureResponse.Merge(m, src)
}
func (m *MsgUpdateLemMeasureResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateLemMeasureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateLemMeasureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateLemMeasureResponse proto.InternalMessageInfo

type MsgDeleteLemMeasure struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgDeleteLemMeasure) Reset()         { *m = MsgDeleteLemMeasure{} }
func (m *MsgDeleteLemMeasure) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteLemMeasure) ProtoMessage()    {}
func (*MsgDeleteLemMeasure) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{28}
}
func (m *MsgDeleteLemMeasure) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteLemMeasure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteLemMeasure.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteLemMeasure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteLemMeasure.Merge(m, src)
}
func (m *MsgDeleteLemMeasure) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteLemMeasure) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteLemMeasure.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteLemMeasure proto.InternalMessageInfo

func (m *MsgDeleteLemMeasure) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteLemMeasure) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgDeleteLemMeasureResponse struct {
}

func (m *MsgDeleteLemMeasureResponse) Reset()         { *m = MsgDeleteLemMeasureResponse{} }
func (m *MsgDeleteLemMeasureResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteLemMeasureResponse) ProtoMessage()    {}
func (*MsgDeleteLemMeasureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{29}
}
func (m *MsgDeleteLemMeasureResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteLemMeasureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteLemMeasureResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteLemMeasureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteLemMeasureResponse.Merge(m, src)
}
func (m *MsgDeleteLemMeasureResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteLemMeasureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteLemMeasureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteLemMeasureResponse proto.InternalMessageInfo

type MsgCreateSla struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Start   int32  `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	End     int32  `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
}

func (m *MsgCreateSla) Reset()         { *m = MsgCreateSla{} }
func (m *MsgCreateSla) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSla) ProtoMessage()    {}
func (*MsgCreateSla) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{30}
}
func (m *MsgCreateSla) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSla) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSla.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSla) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSla.Merge(m, src)
}
func (m *MsgCreateSla) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSla) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSla.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSla proto.InternalMessageInfo

func (m *MsgCreateSla) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSla) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgCreateSla) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *MsgCreateSla) GetEnd() int32 {
	if m != nil {
		return m.End
	}
	return 0
}

type MsgCreateSlaResponse struct {
}

func (m *MsgCreateSlaResponse) Reset()         { *m = MsgCreateSlaResponse{} }
func (m *MsgCreateSlaResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSlaResponse) ProtoMessage()    {}
func (*MsgCreateSlaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{31}
}
func (m *MsgCreateSlaResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSlaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSlaResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSlaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSlaResponse.Merge(m, src)
}
func (m *MsgCreateSlaResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSlaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSlaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSlaResponse proto.InternalMessageInfo

type MsgUpdateSla struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Start   int32  `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	End     int32  `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
}

func (m *MsgUpdateSla) Reset()         { *m = MsgUpdateSla{} }
func (m *MsgUpdateSla) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSla) ProtoMessage()    {}
func (*MsgUpdateSla) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{32}
}
func (m *MsgUpdateSla) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSla) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSla.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSla) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSla.Merge(m, src)
}
func (m *MsgUpdateSla) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSla) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSla.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSla proto.InternalMessageInfo

func (m *MsgUpdateSla) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateSla) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgUpdateSla) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *MsgUpdateSla) GetEnd() int32 {
	if m != nil {
		return m.End
	}
	return 0
}

type MsgUpdateSlaResponse struct {
}

func (m *MsgUpdateSlaResponse) Reset()         { *m = MsgUpdateSlaResponse{} }
func (m *MsgUpdateSlaResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSlaResponse) ProtoMessage()    {}
func (*MsgUpdateSlaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{33}
}
func (m *MsgUpdateSlaResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSlaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSlaResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSlaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSlaResponse.Merge(m, src)
}
func (m *MsgUpdateSlaResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSlaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSlaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSlaResponse proto.InternalMessageInfo

type MsgDeleteSla struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgDeleteSla) Reset()         { *m = MsgDeleteSla{} }
func (m *MsgDeleteSla) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSla) ProtoMessage()    {}
func (*MsgDeleteSla) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{34}
}
func (m *MsgDeleteSla) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSla) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSla.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSla) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSla.Merge(m, src)
}
func (m *MsgDeleteSla) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSla) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSla.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSla proto.InternalMessageInfo

func (m *MsgDeleteSla) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteSla) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgDeleteSlaResponse struct {
}

func (m *MsgDeleteSlaResponse) Reset()         { *m = MsgDeleteSlaResponse{} }
func (m *MsgDeleteSlaResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSlaResponse) ProtoMessage()    {}
func (*MsgDeleteSlaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{35}
}
func (m *MsgDeleteSlaResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSlaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSlaResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSlaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSlaResponse.Merge(m, src)
}
func (m *MsgDeleteSlaResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSlaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSlaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSlaResponse proto.InternalMessageInfo

type MsgCreateKpi struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Sla     string `protobuf:"bytes,3,opt,name=sla,proto3" json:"sla,omitempty"`
	Rule    string `protobuf:"bytes,4,opt,name=rule,proto3" json:"rule,omitempty"`
	Limit   string `protobuf:"bytes,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Mu      string `protobuf:"bytes,6,opt,name=mu,proto3" json:"mu,omitempty"`
	Penalty int32  `protobuf:"varint,7,opt,name=penalty,proto3" json:"penalty,omitempty"`
}

func (m *MsgCreateKpi) Reset()         { *m = MsgCreateKpi{} }
func (m *MsgCreateKpi) String() string { return proto.CompactTextString(m) }
func (*MsgCreateKpi) ProtoMessage()    {}
func (*MsgCreateKpi) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{36}
}
func (m *MsgCreateKpi) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateKpi) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateKpi.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateKpi) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateKpi.Merge(m, src)
}
func (m *MsgCreateKpi) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateKpi) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateKpi.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateKpi proto.InternalMessageInfo

func (m *MsgCreateKpi) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateKpi) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgCreateKpi) GetSla() string {
	if m != nil {
		return m.Sla
	}
	return ""
}

func (m *MsgCreateKpi) GetRule() string {
	if m != nil {
		return m.Rule
	}
	return ""
}

func (m *MsgCreateKpi) GetLimit() string {
	if m != nil {
		return m.Limit
	}
	return ""
}

func (m *MsgCreateKpi) GetMu() string {
	if m != nil {
		return m.Mu
	}
	return ""
}

func (m *MsgCreateKpi) GetPenalty() int32 {
	if m != nil {
		return m.Penalty
	}
	return 0
}

type MsgCreateKpiResponse struct {
}

func (m *MsgCreateKpiResponse) Reset()         { *m = MsgCreateKpiResponse{} }
func (m *MsgCreateKpiResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateKpiResponse) ProtoMessage()    {}
func (*MsgCreateKpiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{37}
}
func (m *MsgCreateKpiResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateKpiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateKpiResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateKpiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateKpiResponse.Merge(m, src)
}
func (m *MsgCreateKpiResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateKpiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateKpiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateKpiResponse proto.InternalMessageInfo

type MsgUpdateKpi struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Sla     string `protobuf:"bytes,3,opt,name=sla,proto3" json:"sla,omitempty"`
	Rule    string `protobuf:"bytes,4,opt,name=rule,proto3" json:"rule,omitempty"`
	Limit   string `protobuf:"bytes,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Mu      string `protobuf:"bytes,6,opt,name=mu,proto3" json:"mu,omitempty"`
	Penalty int32  `protobuf:"varint,7,opt,name=penalty,proto3" json:"penalty,omitempty"`
}

func (m *MsgUpdateKpi) Reset()         { *m = MsgUpdateKpi{} }
func (m *MsgUpdateKpi) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateKpi) ProtoMessage()    {}
func (*MsgUpdateKpi) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{38}
}
func (m *MsgUpdateKpi) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateKpi) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateKpi.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateKpi) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateKpi.Merge(m, src)
}
func (m *MsgUpdateKpi) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateKpi) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateKpi.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateKpi proto.InternalMessageInfo

func (m *MsgUpdateKpi) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateKpi) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgUpdateKpi) GetSla() string {
	if m != nil {
		return m.Sla
	}
	return ""
}

func (m *MsgUpdateKpi) GetRule() string {
	if m != nil {
		return m.Rule
	}
	return ""
}

func (m *MsgUpdateKpi) GetLimit() string {
	if m != nil {
		return m.Limit
	}
	return ""
}

func (m *MsgUpdateKpi) GetMu() string {
	if m != nil {
		return m.Mu
	}
	return ""
}

func (m *MsgUpdateKpi) GetPenalty() int32 {
	if m != nil {
		return m.Penalty
	}
	return 0
}

type MsgUpdateKpiResponse struct {
}

func (m *MsgUpdateKpiResponse) Reset()         { *m = MsgUpdateKpiResponse{} }
func (m *MsgUpdateKpiResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateKpiResponse) ProtoMessage()    {}
func (*MsgUpdateKpiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{39}
}
func (m *MsgUpdateKpiResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateKpiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateKpiResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateKpiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateKpiResponse.Merge(m, src)
}
func (m *MsgUpdateKpiResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateKpiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateKpiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateKpiResponse proto.InternalMessageInfo

type MsgDeleteKpi struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgDeleteKpi) Reset()         { *m = MsgDeleteKpi{} }
func (m *MsgDeleteKpi) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteKpi) ProtoMessage()    {}
func (*MsgDeleteKpi) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{40}
}
func (m *MsgDeleteKpi) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteKpi) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteKpi.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteKpi) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteKpi.Merge(m, src)
}
func (m *MsgDeleteKpi) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteKpi) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteKpi.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteKpi proto.InternalMessageInfo

func (m *MsgDeleteKpi) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteKpi) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgDeleteKpiResponse struct {
}

func (m *MsgDeleteKpiResponse) Reset()         { *m = MsgDeleteKpiResponse{} }
func (m *MsgDeleteKpiResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteKpiResponse) ProtoMessage()    {}
func (*MsgDeleteKpiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{41}
}
func (m *MsgDeleteKpiResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteKpiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteKpiResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteKpiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteKpiResponse.Merge(m, src)
}
func (m *MsgDeleteKpiResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteKpiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteKpiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteKpiResponse proto.InternalMessageInfo

type MsgCreateKpiMeasure struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index     string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Kpi       string `protobuf:"bytes,3,opt,name=kpi,proto3" json:"kpi,omitempty"`
	Player    string `protobuf:"bytes,4,opt,name=player,proto3" json:"player,omitempty"`
	Timestamp int32  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value     string `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	Mu        string `protobuf:"bytes,7,opt,name=mu,proto3" json:"mu,omitempty"`
}

func (m *MsgCreateKpiMeasure) Reset()         { *m = MsgCreateKpiMeasure{} }
func (m *MsgCreateKpiMeasure) String() string { return proto.CompactTextString(m) }
func (*MsgCreateKpiMeasure) ProtoMessage()    {}
func (*MsgCreateKpiMeasure) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{42}
}
func (m *MsgCreateKpiMeasure) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateKpiMeasure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateKpiMeasure.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateKpiMeasure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateKpiMeasure.Merge(m, src)
}
func (m *MsgCreateKpiMeasure) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateKpiMeasure) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateKpiMeasure.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateKpiMeasure proto.InternalMessageInfo

func (m *MsgCreateKpiMeasure) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateKpiMeasure) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgCreateKpiMeasure) GetKpi() string {
	if m != nil {
		return m.Kpi
	}
	return ""
}

func (m *MsgCreateKpiMeasure) GetPlayer() string {
	if m != nil {
		return m.Player
	}
	return ""
}

func (m *MsgCreateKpiMeasure) GetTimestamp() int32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MsgCreateKpiMeasure) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *MsgCreateKpiMeasure) GetMu() string {
	if m != nil {
		return m.Mu
	}
	return ""
}

type MsgCreateKpiMeasureResponse struct {
}

func (m *MsgCreateKpiMeasureResponse) Reset()         { *m = MsgCreateKpiMeasureResponse{} }
func (m *MsgCreateKpiMeasureResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateKpiMeasureResponse) ProtoMessage()    {}
func (*MsgCreateKpiMeasureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{43}
}
func (m *MsgCreateKpiMeasureResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateKpiMeasureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateKpiMeasureResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateKpiMeasureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateKpiMeasureResponse.Merge(m, src)
}
func (m *MsgCreateKpiMeasureResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateKpiMeasureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateKpiMeasureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateKpiMeasureResponse proto.InternalMessageInfo

type MsgUpdateKpiMeasure struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index     string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Kpi       string `protobuf:"bytes,3,opt,name=kpi,proto3" json:"kpi,omitempty"`
	Player    string `protobuf:"bytes,4,opt,name=player,proto3" json:"player,omitempty"`
	Timestamp int32  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value     string `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	Mu        string `protobuf:"bytes,7,opt,name=mu,proto3" json:"mu,omitempty"`
}

func (m *MsgUpdateKpiMeasure) Reset()         { *m = MsgUpdateKpiMeasure{} }
func (m *MsgUpdateKpiMeasure) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateKpiMeasure) ProtoMessage()    {}
func (*MsgUpdateKpiMeasure) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{44}
}
func (m *MsgUpdateKpiMeasure) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateKpiMeasure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateKpiMeasure.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateKpiMeasure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateKpiMeasure.Merge(m, src)
}
func (m *MsgUpdateKpiMeasure) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateKpiMeasure) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateKpiMeasure.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateKpiMeasure proto.InternalMessageInfo

func (m *MsgUpdateKpiMeasure) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateKpiMeasure) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgUpdateKpiMeasure) GetKpi() string {
	if m != nil {
		return m.Kpi
	}
	return ""
}

func (m *MsgUpdateKpiMeasure) GetPlayer() string {
	if m != nil {
		return m.Player
	}
	return ""
}

func (m *MsgUpdateKpiMeasure) GetTimestamp() int32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MsgUpdateKpiMeasure) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *MsgUpdateKpiMeasure) GetMu() string {
	if m != nil {
		return m.Mu
	}
	return ""
}

type MsgUpdateKpiMeasureResponse struct {
}

func (m *MsgUpdateKpiMeasureResponse) Reset()         { *m = MsgUpdateKpiMeasureResponse{} }
func (m *MsgUpdateKpiMeasureResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateKpiMeasureResponse) ProtoMessage()    {}
func (*MsgUpdateKpiMeasureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{45}
}
func (m *MsgUpdateKpiMeasureResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateKpiMeasureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateKpiMeasureResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateKpiMeasureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateKpiMeasureResponse.Merge(m, src)
}
func (m *MsgUpdateKpiMeasureResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateKpiMeasureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateKpiMeasureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateKpiMeasureResponse proto.InternalMessageInfo

type MsgDeleteKpiMeasure struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgDeleteKpiMeasure) Reset()         { *m = MsgDeleteKpiMeasure{} }
func (m *MsgDeleteKpiMeasure) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteKpiMeasure) ProtoMessage()    {}
func (*MsgDeleteKpiMeasure) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{46}
}
func (m *MsgDeleteKpiMeasure) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteKpiMeasure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteKpiMeasure.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteKpiMeasure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteKpiMeasure.Merge(m, src)
}
func (m *MsgDeleteKpiMeasure) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteKpiMeasure) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteKpiMeasure.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteKpiMeasure proto.InternalMessageInfo

func (m *MsgDeleteKpiMeasure) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteKpiMeasure) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgDeleteKpiMeasureResponse struct {
}

func (m *MsgDeleteKpiMeasureResponse) Reset()         { *m = MsgDeleteKpiMeasureResponse{} }
func (m *MsgDeleteKpiMeasureResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteKpiMeasureResponse) ProtoMessage()    {}
func (*MsgDeleteKpiMeasureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{47}
}
func (m *MsgDeleteKpiMeasureResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteKpiMeasureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteKpiMeasureResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteKpiMeasureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteKpiMeasureResponse.Merge(m, src)
}
func (m *MsgDeleteKpiMeasureResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteKpiMeasureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteKpiMeasureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteKpiMeasureResponse proto.InternalMessageInfo

type MsgCreateLemDataset struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index         string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Player        string `protobuf:"bytes,3,opt,name=player,proto3" json:"player,omitempty"`
	Timestamp     int32  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PconsMeasure  string `protobuf:"bytes,5,opt,name=pconsMeasure,proto3" json:"pconsMeasure,omitempty"`
	PprodMeasure  string `protobuf:"bytes,6,opt,name=pprodMeasure,proto3" json:"pprodMeasure,omitempty"`
	PconsForecast string `protobuf:"bytes,7,opt,name=pconsForecast,proto3" json:"pconsForecast,omitempty"`
	PprodForecast string `protobuf:"bytes,8,opt,name=pprodForecast,proto3" json:"pprodForecast,omitempty"`
}

func (m *MsgCreateLemDataset) Reset()         { *m = MsgCreateLemDataset{} }
func (m *MsgCreateLemDataset) String() string { return proto.CompactTextString(m) }
func (*MsgCreateLemDataset) ProtoMessage()    {}
func (*MsgCreateLemDataset) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{48}
}
func (m *MsgCreateLemDataset) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateLemDataset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateLemDataset.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateLemDataset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateLemDataset.Merge(m, src)
}
func (m *MsgCreateLemDataset) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateLemDataset) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateLemDataset.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateLemDataset proto.InternalMessageInfo

func (m *MsgCreateLemDataset) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateLemDataset) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgCreateLemDataset) GetPlayer() string {
	if m != nil {
		return m.Player
	}
	return ""
}

func (m *MsgCreateLemDataset) GetTimestamp() int32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MsgCreateLemDataset) GetPconsMeasure() string {
	if m != nil {
		return m.PconsMeasure
	}
	return ""
}

func (m *MsgCreateLemDataset) GetPprodMeasure() string {
	if m != nil {
		return m.PprodMeasure
	}
	return ""
}

func (m *MsgCreateLemDataset) GetPconsForecast() string {
	if m != nil {
		return m.PconsForecast
	}
	return ""
}

func (m *MsgCreateLemDataset) GetPprodForecast() string {
	if m != nil {
		return m.PprodForecast
	}
	return ""
}

type MsgCreateLemDatasetResponse struct {
}

func (m *MsgCreateLemDatasetResponse) Reset()         { *m = MsgCreateLemDatasetResponse{} }
func (m *MsgCreateLemDatasetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateLemDatasetResponse) ProtoMessage()    {}
func (*MsgCreateLemDatasetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{49}
}
func (m *MsgCreateLemDatasetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateLemDatasetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateLemDatasetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateLemDatasetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateLemDatasetResponse.Merge(m, src)
}
func (m *MsgCreateLemDatasetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateLemDatasetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateLemDatasetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateLemDatasetResponse proto.InternalMessageInfo

type MsgUpdateLemDataset struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index         string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Player        string `protobuf:"bytes,3,opt,name=player,proto3" json:"player,omitempty"`
	Timestamp     int32  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PconsMeasure  string `protobuf:"bytes,5,opt,name=pconsMeasure,proto3" json:"pconsMeasure,omitempty"`
	PprodMeasure  string `protobuf:"bytes,6,opt,name=pprodMeasure,proto3" json:"pprodMeasure,omitempty"`
	PconsForecast string `protobuf:"bytes,7,opt,name=pconsForecast,proto3" json:"pconsForecast,omitempty"`
	PprodForecast string `protobuf:"bytes,8,opt,name=pprodForecast,proto3" json:"pprodForecast,omitempty"`
}

func (m *MsgUpdateLemDataset) Reset()         { *m = MsgUpdateLemDataset{} }
func (m *MsgUpdateLemDataset) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateLemDataset) ProtoMessage()    {}
func (*MsgUpdateLemDataset) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{50}
}
func (m *MsgUpdateLemDataset) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateLemDataset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateLemDataset.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateLemDataset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateLemDataset.Merge(m, src)
}
func (m *MsgUpdateLemDataset) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateLemDataset) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateLemDataset.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateLemDataset proto.InternalMessageInfo

func (m *MsgUpdateLemDataset) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateLemDataset) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgUpdateLemDataset) GetPlayer() string {
	if m != nil {
		return m.Player
	}
	return ""
}

func (m *MsgUpdateLemDataset) GetTimestamp() int32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MsgUpdateLemDataset) GetPconsMeasure() string {
	if m != nil {
		return m.PconsMeasure
	}
	return ""
}

func (m *MsgUpdateLemDataset) GetPprodMeasure() string {
	if m != nil {
		return m.PprodMeasure
	}
	return ""
}

func (m *MsgUpdateLemDataset) GetPconsForecast() string {
	if m != nil {
		return m.PconsForecast
	}
	return ""
}

func (m *MsgUpdateLemDataset) GetPprodForecast() string {
	if m != nil {
		return m.PprodForecast
	}
	return ""
}

type MsgUpdateLemDatasetResponse struct {
}

func (m *MsgUpdateLemDatasetResponse) Reset()         { *m = MsgUpdateLemDatasetResponse{} }
func (m *MsgUpdateLemDatasetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateLemDatasetResponse) ProtoMessage()    {}
func (*MsgUpdateLemDatasetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{51}
}
func (m *MsgUpdateLemDatasetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateLemDatasetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateLemDatasetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateLemDatasetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateLemDatasetResponse.Merge(m, src)
}
func (m *MsgUpdateLemDatasetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateLemDatasetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateLemDatasetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateLemDatasetResponse proto.InternalMessageInfo

type MsgDeleteLemDataset struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgDeleteLemDataset) Reset()         { *m = MsgDeleteLemDataset{} }
func (m *MsgDeleteLemDataset) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteLemDataset) ProtoMessage()    {}
func (*MsgDeleteLemDataset) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{52}
}
func (m *MsgDeleteLemDataset) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteLemDataset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteLemDataset.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteLemDataset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteLemDataset.Merge(m, src)
}
func (m *MsgDeleteLemDataset) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteLemDataset) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteLemDataset.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteLemDataset proto.InternalMessageInfo

func (m *MsgDeleteLemDataset) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteLemDataset) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgDeleteLemDatasetResponse struct {
}

func (m *MsgDeleteLemDatasetResponse) Reset()         { *m = MsgDeleteLemDatasetResponse{} }
func (m *MsgDeleteLemDatasetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteLemDatasetResponse) ProtoMessage()    {}
func (*MsgDeleteLemDatasetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{53}
}
func (m *MsgDeleteLemDatasetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteLemDatasetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteLemDatasetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteLemDatasetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteLemDatasetResponse.Merge(m, src)
}
func (m *MsgDeleteLemDatasetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteLemDatasetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteLemDatasetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteLemDatasetResponse proto.InternalMessageInfo

type MsgCreateDefaultLemPars struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	PbBAU   string `protobuf:"bytes,3,opt,name=pbBAU,proto3" json:"pbBAU,omitempty"`
	PsBAU   string `protobuf:"bytes,4,opt,name=psBAU,proto3" json:"psBAU,omitempty"`
	PbP2P   string `protobuf:"bytes,5,opt,name=pbP2P,proto3" json:"pbP2P,omitempty"`
	PsP2P   string `protobuf:"bytes,6,opt,name=psP2P,proto3" json:"psP2P,omitempty"`
	Beta    string `protobuf:"bytes,7,opt,name=beta,proto3" json:"beta,omitempty"`
}

func (m *MsgCreateDefaultLemPars) Reset()         { *m = MsgCreateDefaultLemPars{} }
func (m *MsgCreateDefaultLemPars) String() string { return proto.CompactTextString(m) }
func (*MsgCreateDefaultLemPars) ProtoMessage()    {}
func (*MsgCreateDefaultLemPars) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{54}
}
func (m *MsgCreateDefaultLemPars) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateDefaultLemPars) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateDefaultLemPars.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateDefaultLemPars) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateDefaultLemPars.Merge(m, src)
}
func (m *MsgCreateDefaultLemPars) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateDefaultLemPars) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateDefaultLemPars.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateDefaultLemPars proto.InternalMessageInfo

func (m *MsgCreateDefaultLemPars) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateDefaultLemPars) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgCreateDefaultLemPars) GetPbBAU() string {
	if m != nil {
		return m.PbBAU
	}
	return ""
}

func (m *MsgCreateDefaultLemPars) GetPsBAU() string {
	if m != nil {
		return m.PsBAU
	}
	return ""
}

func (m *MsgCreateDefaultLemPars) GetPbP2P() string {
	if m != nil {
		return m.PbP2P
	}
	return ""
}

func (m *MsgCreateDefaultLemPars) GetPsP2P() string {
	if m != nil {
		return m.PsP2P
	}
	return ""
}

func (m *MsgCreateDefaultLemPars) GetBeta() string {
	if m != nil {
		return m.Beta
	}
	return ""
}

type MsgCreateDefaultLemParsResponse struct {
}

func (m *MsgCreateDefaultLemParsResponse) Reset()         { *m = MsgCreateDefaultLemParsResponse{} }
func (m *MsgCreateDefaultLemParsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateDefaultLemParsResponse) ProtoMessage()    {}
func (*MsgCreateDefaultLemParsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{55}
}
func (m *MsgCreateDefaultLemParsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateDefaultLemParsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateDefaultLemParsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateDefaultLemParsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateDefaultLemParsResponse.Merge(m, src)
}
func (m *MsgCreateDefaultLemParsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateDefaultLemParsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateDefaultLemParsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateDefaultLemParsResponse proto.InternalMessageInfo

type MsgUpdateDefaultLemPars struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	PbBAU   string `protobuf:"bytes,3,opt,name=pbBAU,proto3" json:"pbBAU,omitempty"`
	PsBAU   string `protobuf:"bytes,4,opt,name=psBAU,proto3" json:"psBAU,omitempty"`
	PbP2P   string `protobuf:"bytes,5,opt,name=pbP2P,proto3" json:"pbP2P,omitempty"`
	PsP2P   string `protobuf:"bytes,6,opt,name=psP2P,proto3" json:"psP2P,omitempty"`
	Beta    string `protobuf:"bytes,7,opt,name=beta,proto3" json:"beta,omitempty"`
}

func (m *MsgUpdateDefaultLemPars) Reset()         { *m = MsgUpdateDefaultLemPars{} }
func (m *MsgUpdateDefaultLemPars) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDefaultLemPars) ProtoMessage()    {}
func (*MsgUpdateDefaultLemPars) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{56}
}
func (m *MsgUpdateDefaultLemPars) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDefaultLemPars) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDefaultLemPars.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDefaultLemPars) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDefaultLemPars.Merge(m, src)
}
func (m *MsgUpdateDefaultLemPars) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDefaultLemPars) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDefaultLemPars.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDefaultLemPars proto.InternalMessageInfo

func (m *MsgUpdateDefaultLemPars) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateDefaultLemPars) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgUpdateDefaultLemPars) GetPbBAU() string {
	if m != nil {
		return m.PbBAU
	}
	return ""
}

func (m *MsgUpdateDefaultLemPars) GetPsBAU() string {
	if m != nil {
		return m.PsBAU
	}
	return ""
}

func (m *MsgUpdateDefaultLemPars) GetPbP2P() string {
	if m != nil {
		return m.PbP2P
	}
	return ""
}

func (m *MsgUpdateDefaultLemPars) GetPsP2P() string {
	if m != nil {
		return m.PsP2P
	}
	return ""
}

func (m *MsgUpdateDefaultLemPars) GetBeta() string {
	if m != nil {
		return m.Beta
	}
	return ""
}

type MsgUpdateDefaultLemParsResponse struct {
}

func (m *MsgUpdateDefaultLemParsResponse) Reset()         { *m = MsgUpdateDefaultLemParsResponse{} }
func (m *MsgUpdateDefaultLemParsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDefaultLemParsResponse) ProtoMessage()    {}
func (*MsgUpdateDefaultLemParsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{57}
}
func (m *MsgUpdateDefaultLemParsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDefaultLemParsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDefaultLemParsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDefaultLemParsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDefaultLemParsResponse.Merge(m, src)
}
func (m *MsgUpdateDefaultLemParsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDefaultLemParsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDefaultLemParsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDefaultLemParsResponse proto.InternalMessageInfo

type MsgDeleteDefaultLemPars struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgDeleteDefaultLemPars) Reset()         { *m = MsgDeleteDefaultLemPars{} }
func (m *MsgDeleteDefaultLemPars) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteDefaultLemPars) ProtoMessage()    {}
func (*MsgDeleteDefaultLemPars) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{58}
}
func (m *MsgDeleteDefaultLemPars) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteDefaultLemPars) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteDefaultLemPars.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteDefaultLemPars) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteDefaultLemPars.Merge(m, src)
}
func (m *MsgDeleteDefaultLemPars) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteDefaultLemPars) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteDefaultLemPars.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteDefaultLemPars proto.InternalMessageInfo

func (m *MsgDeleteDefaultLemPars) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteDefaultLemPars) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgDeleteDefaultLemParsResponse struct {
}

func (m *MsgDeleteDefaultLemParsResponse) Reset()         { *m = MsgDeleteDefaultLemParsResponse{} }
func (m *MsgDeleteDefaultLemParsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteDefaultLemParsResponse) ProtoMessage()    {}
func (*MsgDeleteDefaultLemParsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19598b11f3529543, []int{59}
}
func (m *MsgDeleteDefaultLemParsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteDefaultLemParsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteDefaultLemParsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteDefaultLemParsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteDefaultLemParsResponse.Merge(m, src)
}
func (m *MsgDeleteDefaultLemParsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteDefaultLemParsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteDefaultLemParsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteDefaultLemParsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateDso)(nil), "supsidacdisaac.pm.pm.MsgCreateDso")
	proto.RegisterType((*MsgCreateDsoResponse)(nil), "supsidacdisaac.pm.pm.MsgCreateDsoResponse")
	proto.RegisterType((*MsgUpdateDso)(nil), "supsidacdisaac.pm.pm.MsgUpdateDso")
	proto.RegisterType((*MsgUpdateDsoResponse)(nil), "supsidacdisaac.pm.pm.MsgUpdateDsoResponse")
	proto.RegisterType((*MsgDeleteDso)(nil), "supsidacdisaac.pm.pm.MsgDeleteDso")
	proto.RegisterType((*MsgDeleteDsoResponse)(nil), "supsidacdisaac.pm.pm.MsgDeleteDsoResponse")
	proto.RegisterType((*MsgCreateAggregator)(nil), "supsidacdisaac.pm.pm.MsgCreateAggregator")
	proto.RegisterType((*MsgCreateAggregatorResponse)(nil), "supsidacdisaac.pm.pm.MsgCreateAggregatorResponse")
	proto.RegisterType((*MsgUpdateAggregator)(nil), "supsidacdisaac.pm.pm.MsgUpdateAggregator")
	proto.RegisterType((*MsgUpdateAggregatorResponse)(nil), "supsidacdisaac.pm.pm.MsgUpdateAggregatorResponse")
	proto.RegisterType((*MsgDeleteAggregator)(nil), "supsidacdisaac.pm.pm.MsgDeleteAggregator")
	proto.RegisterType((*MsgDeleteAggregatorResponse)(nil), "supsidacdisaac.pm.pm.MsgDeleteAggregatorResponse")
	proto.RegisterType((*MsgCreatePlayer)(nil), "supsidacdisaac.pm.pm.MsgCreatePlayer")
	proto.RegisterType((*MsgCreatePlayerResponse)(nil), "supsidacdisaac.pm.pm.MsgCreatePlayerResponse")
	proto.RegisterType((*MsgUpdatePlayer)(nil), "supsidacdisaac.pm.pm.MsgUpdatePlayer")
	proto.RegisterType((*MsgUpdatePlayerResponse)(nil), "supsidacdisaac.pm.pm.MsgUpdatePlayerResponse")
	proto.RegisterType((*MsgDeletePlayer)(nil), "supsidacdisaac.pm.pm.MsgDeletePlayer")
	proto.RegisterType((*MsgDeletePlayerResponse)(nil), "supsidacdisaac.pm.pm.MsgDeletePlayerResponse")
	proto.RegisterType((*MsgCreateLem)(nil), "supsidacdisaac.pm.pm.MsgCreateLem")
	proto.RegisterType((*MsgCreateLemResponse)(nil), "supsidacdisaac.pm.pm.MsgCreateLemResponse")
	proto.RegisterType((*MsgUpdateLem)(nil), "supsidacdisaac.pm.pm.MsgUpdateLem")
	proto.RegisterType((*MsgUpdateLemResponse)(nil), "supsidacdisaac.pm.pm.MsgUpdateLemResponse")
	proto.RegisterType((*MsgDeleteLem)(nil), "supsidacdisaac.pm.pm.MsgDeleteLem")
	proto.RegisterType((*MsgDeleteLemResponse)(nil), "supsidacdisaac.pm.pm.MsgDeleteLemResponse")
	proto.RegisterType((*MsgCreateLemMeasure)(nil), "supsidacdisaac.pm.pm.MsgCreateLemMeasure")
	proto.RegisterType((*MsgCreateLemMeasureResponse)(nil), "supsidacdisaac.pm.pm.MsgCreateLemMeasureResponse")
	proto.RegisterType((*MsgUpdateLemMeasure)(nil), "supsidacdisaac.pm.pm.MsgUpdateLemMeasure")
	proto.RegisterType((*MsgUpdateLemMeasureResponse)(nil), "supsidacdisaac.pm.pm.MsgUpdateLemMeasureResponse")
	proto.RegisterType((*MsgDeleteLemMeasure)(nil), "supsidacdisaac.pm.pm.MsgDeleteLemMeasure")
	proto.RegisterType((*MsgDeleteLemMeasureResponse)(nil), "supsidacdisaac.pm.pm.MsgDeleteLemMeasureResponse")
	proto.RegisterType((*MsgCreateSla)(nil), "supsidacdisaac.pm.pm.MsgCreateSla")
	proto.RegisterType((*MsgCreateSlaResponse)(nil), "supsidacdisaac.pm.pm.MsgCreateSlaResponse")
	proto.RegisterType((*MsgUpdateSla)(nil), "supsidacdisaac.pm.pm.MsgUpdateSla")
	proto.RegisterType((*MsgUpdateSlaResponse)(nil), "supsidacdisaac.pm.pm.MsgUpdateSlaResponse")
	proto.RegisterType((*MsgDeleteSla)(nil), "supsidacdisaac.pm.pm.MsgDeleteSla")
	proto.RegisterType((*MsgDeleteSlaResponse)(nil), "supsidacdisaac.pm.pm.MsgDeleteSlaResponse")
	proto.RegisterType((*MsgCreateKpi)(nil), "supsidacdisaac.pm.pm.MsgCreateKpi")
	proto.RegisterType((*MsgCreateKpiResponse)(nil), "supsidacdisaac.pm.pm.MsgCreateKpiResponse")
	proto.RegisterType((*MsgUpdateKpi)(nil), "supsidacdisaac.pm.pm.MsgUpdateKpi")
	proto.RegisterType((*MsgUpdateKpiResponse)(nil), "supsidacdisaac.pm.pm.MsgUpdateKpiResponse")
	proto.RegisterType((*MsgDeleteKpi)(nil), "supsidacdisaac.pm.pm.MsgDeleteKpi")
	proto.RegisterType((*MsgDeleteKpiResponse)(nil), "supsidacdisaac.pm.pm.MsgDeleteKpiResponse")
	proto.RegisterType((*MsgCreateKpiMeasure)(nil), "supsidacdisaac.pm.pm.MsgCreateKpiMeasure")
	proto.RegisterType((*MsgCreateKpiMeasureResponse)(nil), "supsidacdisaac.pm.pm.MsgCreateKpiMeasureResponse")
	proto.RegisterType((*MsgUpdateKpiMeasure)(nil), "supsidacdisaac.pm.pm.MsgUpdateKpiMeasure")
	proto.RegisterType((*MsgUpdateKpiMeasureResponse)(nil), "supsidacdisaac.pm.pm.MsgUpdateKpiMeasureResponse")
	proto.RegisterType((*MsgDeleteKpiMeasure)(nil), "supsidacdisaac.pm.pm.MsgDeleteKpiMeasure")
	proto.RegisterType((*MsgDeleteKpiMeasureResponse)(nil), "supsidacdisaac.pm.pm.MsgDeleteKpiMeasureResponse")
	proto.RegisterType((*MsgCreateLemDataset)(nil), "supsidacdisaac.pm.pm.MsgCreateLemDataset")
	proto.RegisterType((*MsgCreateLemDatasetResponse)(nil), "supsidacdisaac.pm.pm.MsgCreateLemDatasetResponse")
	proto.RegisterType((*MsgUpdateLemDataset)(nil), "supsidacdisaac.pm.pm.MsgUpdateLemDataset")
	proto.RegisterType((*MsgUpdateLemDatasetResponse)(nil), "supsidacdisaac.pm.pm.MsgUpdateLemDatasetResponse")
	proto.RegisterType((*MsgDeleteLemDataset)(nil), "supsidacdisaac.pm.pm.MsgDeleteLemDataset")
	proto.RegisterType((*MsgDeleteLemDatasetResponse)(nil), "supsidacdisaac.pm.pm.MsgDeleteLemDatasetResponse")
	proto.RegisterType((*MsgCreateDefaultLemPars)(nil), "supsidacdisaac.pm.pm.MsgCreateDefaultLemPars")
	proto.RegisterType((*MsgCreateDefaultLemParsResponse)(nil), "supsidacdisaac.pm.pm.MsgCreateDefaultLemParsResponse")
	proto.RegisterType((*MsgUpdateDefaultLemPars)(nil), "supsidacdisaac.pm.pm.MsgUpdateDefaultLemPars")
	proto.RegisterType((*MsgUpdateDefaultLemParsResponse)(nil), "supsidacdisaac.pm.pm.MsgUpdateDefaultLemParsResponse")
	proto.RegisterType((*MsgDeleteDefaultLemPars)(nil), "supsidacdisaac.pm.pm.MsgDeleteDefaultLemPars")
	proto.RegisterType((*MsgDeleteDefaultLemParsResponse)(nil), "supsidacdisaac.pm.pm.MsgDeleteDefaultLemParsResponse")
}

func init() { proto.RegisterFile("pm/tx.proto", fileDescriptor_19598b11f3529543) }

var fileDescriptor_19598b11f3529543 = []byte{
	// 1359 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x59, 0x4f, 0x6f, 0xe3, 0x44,
	0x14, 0x6f, 0xda, 0x24, 0x4b, 0x87, 0xc2, 0x56, 0xde, 0x68, 0xf1, 0x06, 0x08, 0x4b, 0x44, 0xa5,
	0x06, 0xa9, 0x89, 0x58, 0x84, 0xb8, 0x21, 0x75, 0x29, 0x48, 0xa8, 0xa9, 0x54, 0x52, 0xf6, 0xc2,
	0x1e, 0x56, 0x93, 0x78, 0x36, 0x58, 0xf5, 0xc4, 0x23, 0x8f, 0x83, 0x5a, 0x89, 0x0b, 0x9f, 0x00,
	0x8e, 0x7c, 0x00, 0xbe, 0x01, 0xe2, 0xc0, 0x37, 0xe0, 0xb8, 0x47, 0x8e, 0xa8, 0x15, 0xdf, 0x03,
	0xcd, 0x1f, 0x8f, 0xc7, 0x63, 0xc7, 0xe3, 0x9a, 0x56, 0x6c, 0xa5, 0xbd, 0xac, 0xf2, 0x5e, 0x9f,
	0x7f, 0xbf, 0xf7, 0x9e, 0xe7, 0xbd, 0xf1, 0x7b, 0x0b, 0x5e, 0x27, 0x78, 0x14, 0x9f, 0x0d, 0x49,
	0x14, 0xc6, 0xa1, 0xd3, 0xa1, 0x4b, 0x42, 0x7d, 0x0f, 0xce, 0x3c, 0x9f, 0x42, 0x38, 0x1b, 0x12,
	0x3c, 0x24, 0xb8, 0xbb, 0x45, 0xf0, 0xc8, 0xa3, 0xa1, 0xb0, 0xe9, 0xde, 0x23, 0x78, 0x04, 0xe7,
	0xf3, 0x08, 0xcd, 0x61, 0x1c, 0x46, 0x52, 0x79, 0x97, 0xe0, 0x11, 0x09, 0xe0, 0x39, 0x4a, 0x14,
	0xec, 0x99, 0x00, 0x61, 0x29, 0x75, 0x84, 0xf4, 0x0c, 0x23, 0x48, 0x97, 0x11, 0xd2, 0x6c, 0x68,
	0x00, 0x35, 0xe9, 0x94, 0xf8, 0xda, 0x13, 0xa7, 0xc4, 0x37, 0x9e, 0x48, 0x70, 0x3c, 0x18, 0x43,
	0x8a, 0x62, 0xa9, 0x7d, 0xc0, 0xfc, 0x43, 0xcf, 0xe1, 0x32, 0x88, 0x9f, 0xb1, 0xbf, 0x12, 0x18,
	0x51, 0xf1, 0xa7, 0xfe, 0x37, 0x60, 0xeb, 0x88, 0xce, 0x3f, 0x8f, 0x10, 0x8c, 0xd1, 0x01, 0x0d,
	0x1d, 0x17, 0xdc, 0x99, 0x31, 0x21, 0x8c, 0xdc, 0xc6, 0xc3, 0xc6, 0xee, 0xe6, 0x24, 0x11, 0x9d,
	0x6d, 0xb0, 0xe1, 0x7b, 0x67, 0xee, 0x06, 0xd7, 0xb2, 0x9f, 0xcc, 0x16, 0x7a, 0x5e, 0x84, 0x28,
	0x75, 0x9b, 0xc2, 0x56, 0x8a, 0xfd, 0xfb, 0xa0, 0xa3, 0xa3, 0x4e, 0x10, 0x25, 0xe1, 0x82, 0x22,
	0xc9, 0xf6, 0x84, 0x78, 0x37, 0xc0, 0xa6, 0x50, 0x15, 0xdb, 0x2e, 0x67, 0x3b, 0x40, 0x01, 0xb2,
	0xb0, 0x49, 0x04, 0x65, 0xa9, 0x10, 0x9e, 0x82, 0x7b, 0x2a, 0x8e, 0x7d, 0xf5, 0x4a, 0xaf, 0xc9,
	0xed, 0x77, 0xc1, 0xdb, 0x05, 0xe0, 0x06, 0xb7, 0x88, 0xea, 0x86, 0xb8, 0x4d, 0x70, 0xc5, 0x3d,
	0xe2, 0xdc, 0x22, 0x1f, 0x55, 0xb8, 0x25, 0x9e, 0xf9, 0x80, 0xc2, 0xfb, 0xb1, 0x01, 0xee, 0xaa,
	0x58, 0x8f, 0x79, 0x19, 0x94, 0x04, 0xd2, 0x01, 0x2d, 0x7f, 0xe1, 0xa1, 0x33, 0x77, 0x9d, 0xeb,
	0x85, 0x70, 0x95, 0xf0, 0x1c, 0x07, 0x34, 0xa3, 0x30, 0x40, 0x6e, 0x8b, 0xab, 0xf9, 0xef, 0xfe,
	0x03, 0xf0, 0x96, 0xe1, 0x82, 0xe9, 0x9e, 0x48, 0xc7, 0xff, 0xea, 0x9e, 0xee, 0x82, 0x72, 0x6f,
	0x9f, 0x7b, 0x27, 0x92, 0x5b, 0xcf, 0x3b, 0x89, 0xae, 0x43, 0x28, 0xf4, 0x5f, 0x1a, 0x5a, 0x0b,
	0x18, 0x23, 0x7c, 0xe5, 0xc8, 0x3b, 0xa0, 0x45, 0x63, 0x18, 0xc5, 0x3c, 0xf6, 0xd6, 0x44, 0x08,
	0x2c, 0x1f, 0x68, 0xe1, 0xf1, 0xc8, 0x5b, 0x13, 0xf6, 0xd3, 0xb9, 0x0f, 0xda, 0x04, 0x46, 0x10,
	0x53, 0xb7, 0xf5, 0x70, 0x63, 0x77, 0x73, 0x22, 0x25, 0xc6, 0x27, 0x3a, 0x23, 0x75, 0xdb, 0xfc,
	0x0f, 0x89, 0x98, 0x69, 0x23, 0x63, 0x84, 0x4d, 0x97, 0x45, 0xb2, 0x5e, 0x46, 0x97, 0x95, 0x67,
	0xca, 0xe5, 0xcf, 0xb4, 0x5e, 0x54, 0xc3, 0xe3, 0x4c, 0x87, 0xd2, 0x71, 0xff, 0x68, 0x68, 0x2d,
	0x6a, 0x8c, 0xf0, 0x91, 0xb8, 0x0e, 0xae, 0x9c, 0x11, 0x16, 0x29, 0x0f, 0x41, 0x9e, 0x60, 0x29,
	0x31, 0x3d, 0xf5, 0xe7, 0x0b, 0x18, 0xc8, 0x33, 0x2c, 0x25, 0xe7, 0x1d, 0xb0, 0x19, 0xfb, 0x18,
	0xd1, 0x18, 0x62, 0xc2, 0xcf, 0x71, 0x6b, 0x92, 0x2a, 0x18, 0xc7, 0xf7, 0x30, 0x58, 0x22, 0xb7,
	0x2d, 0x38, 0xb8, 0xe0, 0xbc, 0x09, 0xd6, 0xf1, 0xd2, 0xbd, 0xc3, 0x55, 0xeb, 0x78, 0x99, 0x69,
	0x80, 0xa9, 0xeb, 0x66, 0x68, 0x2a, 0x97, 0xb7, 0x2f, 0x34, 0xd3, 0x75, 0x15, 0xda, 0x17, 0x5a,
	0x7f, 0xad, 0x1f, 0x59, 0xa6, 0xeb, 0x16, 0xb0, 0x3c, 0xd7, 0x0a, 0xfb, 0x24, 0x80, 0x37, 0x55,
	0x25, 0x99, 0x32, 0x3d, 0x09, 0xa0, 0xc1, 0x2f, 0x92, 0x70, 0xf3, 0xfc, 0x8a, 0xa7, 0xb0, 0xe6,
	0x6a, 0xf0, 0x67, 0x6a, 0x4e, 0xc7, 0xfd, 0x55, 0xef, 0x98, 0x87, 0xc4, 0xaf, 0x73, 0x57, 0xd0,
	0x00, 0x26, 0x77, 0x05, 0x0d, 0x20, 0xbf, 0x11, 0x96, 0x01, 0x92, 0x27, 0x91, 0xff, 0x66, 0xcf,
	0x06, 0x3e, 0xf6, 0x63, 0x79, 0x4d, 0x08, 0x41, 0x9e, 0xb4, 0x76, 0x72, 0xd2, 0x78, 0x2b, 0x42,
	0x0b, 0x18, 0xc4, 0xe7, 0xfc, 0xf8, 0xb5, 0x26, 0x89, 0x98, 0x79, 0x2d, 0x87, 0xc4, 0x37, 0xdd,
	0x17, 0xf9, 0x7a, 0xd9, 0xdd, 0x57, 0x5e, 0x16, 0xbe, 0xd5, 0x1a, 0xde, 0x67, 0xde, 0xaa, 0x8e,
	0xfb, 0x9b, 0xde, 0x49, 0x0f, 0x89, 0x5f, 0xb7, 0xdd, 0x6c, 0x83, 0x8d, 0x53, 0xe2, 0x27, 0xd9,
	0x39, 0x25, 0xbe, 0xd6, 0x80, 0x9a, 0x99, 0x06, 0x74, 0xdd, 0x3d, 0x34, 0x75, 0xda, 0x0c, 0x4a,
	0x65, 0xf1, 0x36, 0x05, 0x65, 0x3a, 0x5d, 0xd8, 0x3d, 0xeb, 0xc7, 0x94, 0xe9, 0x9e, 0x05, 0x2c,
	0x3f, 0xad, 0x67, 0x6f, 0xd6, 0x03, 0x31, 0x52, 0x5d, 0xdb, 0xf5, 0x93, 0x49, 0x54, 0xd3, 0x4c,
	0x54, 0x1f, 0x6c, 0x91, 0x59, 0xb8, 0xa0, 0xd2, 0x2b, 0x59, 0x44, 0x19, 0x1d, 0xb7, 0x21, 0x51,
	0xe8, 0x25, 0x36, 0x6d, 0x69, 0xa3, 0xe9, 0x9c, 0x0f, 0xc0, 0x1b, 0xfc, 0x99, 0x2f, 0xc3, 0x08,
	0xcd, 0x20, 0x8d, 0x65, 0x96, 0xb3, 0x4a, 0x6e, 0xc5, 0x9e, 0x52, 0x56, 0xaf, 0x49, 0x2b, 0x5d,
	0x69, 0xde, 0xd7, 0x32, 0x21, 0x66, 0xc2, 0xd4, 0xa5, 0xf7, 0x2a, 0x61, 0xc6, 0x57, 0x80, 0x99,
	0x30, 0xe3, 0x2b, 0xa0, 0x66, 0xbe, 0xcc, 0xaf, 0x00, 0x93, 0xe5, 0xf7, 0x86, 0x36, 0xf8, 0x1c,
	0x88, 0x2d, 0xc0, 0x18, 0xe1, 0x63, 0x18, 0xd1, 0x3a, 0x37, 0x32, 0x99, 0x3e, 0xde, 0x7f, 0x22,
	0xdf, 0x8c, 0x10, 0xb8, 0x96, 0x32, 0x6d, 0x53, 0x6a, 0x69, 0xa2, 0x9d, 0x1e, 0x3f, 0x3a, 0x4e,
	0xfa, 0x3f, 0x17, 0x84, 0x2d, 0xd3, 0xb6, 0x13, 0x5b, 0xa6, 0x75, 0x40, 0x73, 0x8a, 0x62, 0x28,
	0x73, 0xcd, 0x7f, 0xf7, 0xdf, 0x07, 0xef, 0xad, 0x70, 0xdb, 0x0c, 0x4d, 0x4e, 0xfe, 0xb7, 0x2d,
	0xb4, 0x22, 0xb7, 0x55, 0x68, 0x5f, 0x69, 0x03, 0xdb, 0x7f, 0x8b, 0x4c, 0xb2, 0x15, 0x41, 0x25,
	0x6c, 0x8f, 0xfe, 0x71, 0xc1, 0xc6, 0x11, 0x9d, 0x3b, 0x4f, 0xc1, 0x66, 0xba, 0x0a, 0xea, 0x0f,
	0x8b, 0x96, 0x5d, 0x43, 0x7d, 0xb1, 0xd3, 0xfd, 0xd0, 0x6e, 0x93, 0x90, 0x30, 0xf0, 0x74, 0xf3,
	0xb3, 0x1a, 0x5c, 0xd9, 0x94, 0x80, 0xe7, 0x76, 0x3d, 0x0c, 0x3c, 0x5d, 0xf4, 0xac, 0x06, 0x57,
	0x36, 0x25, 0xe0, 0xb9, 0x35, 0x90, 0x43, 0xc0, 0x76, 0x6e, 0x07, 0x34, 0xb0, 0x44, 0x9e, 0x9a,
	0x76, 0x3f, 0xaa, 0x6c, 0xaa, 0x33, 0xe6, 0x36, 0x3f, 0x03, 0x4b, 0x3a, 0x2a, 0x31, 0xae, 0x5a,
	0xf9, 0x30, 0xc6, 0xdc, 0xbe, 0x67, 0x60, 0xc9, 0x51, 0x25, 0xc6, 0x55, 0x4b, 0x21, 0xc7, 0x03,
	0x5b, 0x99, 0x85, 0xd0, 0x8e, 0x25, 0x4d, 0xc2, 0xac, 0xbb, 0x57, 0xc9, 0x4c, 0x67, 0xc9, 0xec,
	0x75, 0x76, 0x2c, 0xa9, 0xb1, 0xb2, 0x14, 0xad, 0x68, 0x18, 0x4b, 0x66, 0x3f, 0xb3, 0x63, 0x49,
	0x87, 0x95, 0xa5, 0x68, 0x55, 0x93, 0x96, 0xe7, 0x18, 0x61, 0x6b, 0x79, 0x8e, 0x11, 0xb6, 0x96,
	0xa7, 0xb6, 0x49, 0x48, 0xcb, 0xb3, 0x1c, 0x5c, 0xd9, 0x58, 0xcb, 0xd3, 0x00, 0x4f, 0x77, 0x1f,
	0xb6, 0xf2, 0x2c, 0x07, 0xcf, 0xed, 0x40, 0xd2, 0xf2, 0xd4, 0x46, 0xe9, 0x81, 0x3d, 0x72, 0x69,
	0x6a, 0x2d, 0xcf, 0xfc, 0x64, 0x9d, 0x96, 0x67, 0x25, 0x46, 0xd3, 0xd4, 0x5a, 0x9e, 0xc5, 0x8c,
	0xb9, 0x75, 0xc1, 0xc0, 0x9e, 0x23, 0x3b, 0xe3, 0xaa, 0xed, 0x41, 0x7a, 0xd8, 0xd8, 0xe8, 0x6c,
	0x3b, 0x6c, 0x27, 0x01, 0xb4, 0x1e, 0x36, 0x6d, 0x84, 0x4e, 0x0f, 0x5b, 0x39, 0xb8, 0xb2, 0xb1,
	0x1e, 0x36, 0x03, 0x3c, 0x1d, 0xfa, 0x6d, 0x87, 0xad, 0x1c, 0x3c, 0x37, 0xfc, 0xa7, 0x69, 0x61,
	0xb3, 0xa7, 0x2d, 0x2d, 0x87, 0xc4, 0xb7, 0xa6, 0x45, 0x9b, 0x41, 0xd3, 0xb4, 0x94, 0x83, 0x2b,
	0x1b, 0x6b, 0x5a, 0x0c, 0xf0, 0x74, 0x6a, 0xb6, 0xa5, 0xa5, 0x1c, 0x3c, 0x37, 0x3d, 0xa7, 0x35,
	0xa8, 0x0d, 0x64, 0x03, 0x7b, 0xe4, 0x55, 0x6b, 0x30, 0x3f, 0x9f, 0xa5, 0x35, 0x58, 0x89, 0xd1,
	0x34, 0xb5, 0xd6, 0x60, 0x31, 0x63, 0x6e, 0xe8, 0x1c, 0xd8, 0x73, 0x54, 0xb5, 0x06, 0x8b, 0x19,
	0x73, 0xf3, 0x67, 0x85, 0xce, 0x26, 0x4d, 0xab, 0x74, 0x36, 0x63, 0x5a, 0xc8, 0x74, 0x36, 0x3b,
	0xa3, 0x69, 0x5a, 0xa5, 0xb3, 0x15, 0x30, 0xe6, 0x46, 0xa0, 0x0a, 0x9d, 0xcd, 0xce, 0xb8, 0x6a,
	0x22, 0x72, 0x7e, 0x00, 0x9d, 0xc2, 0x69, 0xc8, 0xf6, 0x65, 0x91, 0x35, 0xef, 0x7e, 0x72, 0x25,
	0x73, 0x9d, 0xbd, 0x70, 0x60, 0xb1, 0x7d, 0x71, 0x54, 0x66, 0x2f, 0x9b, 0x2b, 0x18, 0x7b, 0xe1,
	0x50, 0x61, 0xfb, 0x12, 0xa9, 0xcc, 0x5e, 0x36, 0x67, 0x3c, 0xfe, 0xfa, 0xcf, 0x8b, 0x5e, 0xe3,
	0xc5, 0x45, 0xaf, 0xf1, 0xf7, 0x45, 0xaf, 0xf1, 0xf3, 0x65, 0x6f, 0xed, 0xc5, 0x65, 0x6f, 0xed,
	0xaf, 0xcb, 0xde, 0xda, 0xb7, 0x9f, 0xce, 0xfd, 0xf8, 0xbb, 0xe5, 0x74, 0x38, 0x0b, 0xf1, 0x88,
	0x43, 0xef, 0x31, 0xec, 0x3d, 0x0e, 0x3e, 0x22, 0x30, 0xf2, 0xe3, 0xf3, 0xbd, 0x59, 0x48, 0x71,
	0x48, 0x47, 0x04, 0x8f, 0xce, 0xd8, 0x3f, 0xf1, 0x39, 0x41, 0x74, 0xda, 0xe6, 0xff, 0x8f, 0xfd,
	0xf1, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x61, 0x88, 0x60, 0xb3, 0xa7, 0x1f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateDso(ctx context.Context, in *MsgCreateDso, opts ...grpc.CallOption) (*MsgCreateDsoResponse, error)
	UpdateDso(ctx context.Context, in *MsgUpdateDso, opts ...grpc.CallOption) (*MsgUpdateDsoResponse, error)
	DeleteDso(ctx context.Context, in *MsgDeleteDso, opts ...grpc.CallOption) (*MsgDeleteDsoResponse, error)
	CreateAggregator(ctx context.Context, in *MsgCreateAggregator, opts ...grpc.CallOption) (*MsgCreateAggregatorResponse, error)
	UpdateAggregator(ctx context.Context, in *MsgUpdateAggregator, opts ...grpc.CallOption) (*MsgUpdateAggregatorResponse, error)
	DeleteAggregator(ctx context.Context, in *MsgDeleteAggregator, opts ...grpc.CallOption) (*MsgDeleteAggregatorResponse, error)
	CreatePlayer(ctx context.Context, in *MsgCreatePlayer, opts ...grpc.CallOption) (*MsgCreatePlayerResponse, error)
	UpdatePlayer(ctx context.Context, in *MsgUpdatePlayer, opts ...grpc.CallOption) (*MsgUpdatePlayerResponse, error)
	DeletePlayer(ctx context.Context, in *MsgDeletePlayer, opts ...grpc.CallOption) (*MsgDeletePlayerResponse, error)
	CreateLem(ctx context.Context, in *MsgCreateLem, opts ...grpc.CallOption) (*MsgCreateLemResponse, error)
	UpdateLem(ctx context.Context, in *MsgUpdateLem, opts ...grpc.CallOption) (*MsgUpdateLemResponse, error)
	DeleteLem(ctx context.Context, in *MsgDeleteLem, opts ...grpc.CallOption) (*MsgDeleteLemResponse, error)
	CreateLemMeasure(ctx context.Context, in *MsgCreateLemMeasure, opts ...grpc.CallOption) (*MsgCreateLemMeasureResponse, error)
	UpdateLemMeasure(ctx context.Context, in *MsgUpdateLemMeasure, opts ...grpc.CallOption) (*MsgUpdateLemMeasureResponse, error)
	DeleteLemMeasure(ctx context.Context, in *MsgDeleteLemMeasure, opts ...grpc.CallOption) (*MsgDeleteLemMeasureResponse, error)
	CreateSla(ctx context.Context, in *MsgCreateSla, opts ...grpc.CallOption) (*MsgCreateSlaResponse, error)
	UpdateSla(ctx context.Context, in *MsgUpdateSla, opts ...grpc.CallOption) (*MsgUpdateSlaResponse, error)
	DeleteSla(ctx context.Context, in *MsgDeleteSla, opts ...grpc.CallOption) (*MsgDeleteSlaResponse, error)
	CreateKpi(ctx context.Context, in *MsgCreateKpi, opts ...grpc.CallOption) (*MsgCreateKpiResponse, error)
	UpdateKpi(ctx context.Context, in *MsgUpdateKpi, opts ...grpc.CallOption) (*MsgUpdateKpiResponse, error)
	DeleteKpi(ctx context.Context, in *MsgDeleteKpi, opts ...grpc.CallOption) (*MsgDeleteKpiResponse, error)
	CreateKpiMeasure(ctx context.Context, in *MsgCreateKpiMeasure, opts ...grpc.CallOption) (*MsgCreateKpiMeasureResponse, error)
	UpdateKpiMeasure(ctx context.Context, in *MsgUpdateKpiMeasure, opts ...grpc.CallOption) (*MsgUpdateKpiMeasureResponse, error)
	DeleteKpiMeasure(ctx context.Context, in *MsgDeleteKpiMeasure, opts ...grpc.CallOption) (*MsgDeleteKpiMeasureResponse, error)
	CreateLemDataset(ctx context.Context, in *MsgCreateLemDataset, opts ...grpc.CallOption) (*MsgCreateLemDatasetResponse, error)
	UpdateLemDataset(ctx context.Context, in *MsgUpdateLemDataset, opts ...grpc.CallOption) (*MsgUpdateLemDatasetResponse, error)
	DeleteLemDataset(ctx context.Context, in *MsgDeleteLemDataset, opts ...grpc.CallOption) (*MsgDeleteLemDatasetResponse, error)
	CreateDefaultLemPars(ctx context.Context, in *MsgCreateDefaultLemPars, opts ...grpc.CallOption) (*MsgCreateDefaultLemParsResponse, error)
	UpdateDefaultLemPars(ctx context.Context, in *MsgUpdateDefaultLemPars, opts ...grpc.CallOption) (*MsgUpdateDefaultLemParsResponse, error)
	DeleteDefaultLemPars(ctx context.Context, in *MsgDeleteDefaultLemPars, opts ...grpc.CallOption) (*MsgDeleteDefaultLemParsResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateDso(ctx context.Context, in *MsgCreateDso, opts ...grpc.CallOption) (*MsgCreateDsoResponse, error) {
	out := new(MsgCreateDsoResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/CreateDso", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateDso(ctx context.Context, in *MsgUpdateDso, opts ...grpc.CallOption) (*MsgUpdateDsoResponse, error) {
	out := new(MsgUpdateDsoResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/UpdateDso", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteDso(ctx context.Context, in *MsgDeleteDso, opts ...grpc.CallOption) (*MsgDeleteDsoResponse, error) {
	out := new(MsgDeleteDsoResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/DeleteDso", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateAggregator(ctx context.Context, in *MsgCreateAggregator, opts ...grpc.CallOption) (*MsgCreateAggregatorResponse, error) {
	out := new(MsgCreateAggregatorResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/CreateAggregator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateAggregator(ctx context.Context, in *MsgUpdateAggregator, opts ...grpc.CallOption) (*MsgUpdateAggregatorResponse, error) {
	out := new(MsgUpdateAggregatorResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/UpdateAggregator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteAggregator(ctx context.Context, in *MsgDeleteAggregator, opts ...grpc.CallOption) (*MsgDeleteAggregatorResponse, error) {
	out := new(MsgDeleteAggregatorResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/DeleteAggregator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreatePlayer(ctx context.Context, in *MsgCreatePlayer, opts ...grpc.CallOption) (*MsgCreatePlayerResponse, error) {
	out := new(MsgCreatePlayerResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/CreatePlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdatePlayer(ctx context.Context, in *MsgUpdatePlayer, opts ...grpc.CallOption) (*MsgUpdatePlayerResponse, error) {
	out := new(MsgUpdatePlayerResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/UpdatePlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeletePlayer(ctx context.Context, in *MsgDeletePlayer, opts ...grpc.CallOption) (*MsgDeletePlayerResponse, error) {
	out := new(MsgDeletePlayerResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/DeletePlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateLem(ctx context.Context, in *MsgCreateLem, opts ...grpc.CallOption) (*MsgCreateLemResponse, error) {
	out := new(MsgCreateLemResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/CreateLem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateLem(ctx context.Context, in *MsgUpdateLem, opts ...grpc.CallOption) (*MsgUpdateLemResponse, error) {
	out := new(MsgUpdateLemResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/UpdateLem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteLem(ctx context.Context, in *MsgDeleteLem, opts ...grpc.CallOption) (*MsgDeleteLemResponse, error) {
	out := new(MsgDeleteLemResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/DeleteLem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateLemMeasure(ctx context.Context, in *MsgCreateLemMeasure, opts ...grpc.CallOption) (*MsgCreateLemMeasureResponse, error) {
	out := new(MsgCreateLemMeasureResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/CreateLemMeasure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateLemMeasure(ctx context.Context, in *MsgUpdateLemMeasure, opts ...grpc.CallOption) (*MsgUpdateLemMeasureResponse, error) {
	out := new(MsgUpdateLemMeasureResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/UpdateLemMeasure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteLemMeasure(ctx context.Context, in *MsgDeleteLemMeasure, opts ...grpc.CallOption) (*MsgDeleteLemMeasureResponse, error) {
	out := new(MsgDeleteLemMeasureResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/DeleteLemMeasure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSla(ctx context.Context, in *MsgCreateSla, opts ...grpc.CallOption) (*MsgCreateSlaResponse, error) {
	out := new(MsgCreateSlaResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/CreateSla", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateSla(ctx context.Context, in *MsgUpdateSla, opts ...grpc.CallOption) (*MsgUpdateSlaResponse, error) {
	out := new(MsgUpdateSlaResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/UpdateSla", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteSla(ctx context.Context, in *MsgDeleteSla, opts ...grpc.CallOption) (*MsgDeleteSlaResponse, error) {
	out := new(MsgDeleteSlaResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/DeleteSla", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateKpi(ctx context.Context, in *MsgCreateKpi, opts ...grpc.CallOption) (*MsgCreateKpiResponse, error) {
	out := new(MsgCreateKpiResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/CreateKpi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateKpi(ctx context.Context, in *MsgUpdateKpi, opts ...grpc.CallOption) (*MsgUpdateKpiResponse, error) {
	out := new(MsgUpdateKpiResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/UpdateKpi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteKpi(ctx context.Context, in *MsgDeleteKpi, opts ...grpc.CallOption) (*MsgDeleteKpiResponse, error) {
	out := new(MsgDeleteKpiResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/DeleteKpi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateKpiMeasure(ctx context.Context, in *MsgCreateKpiMeasure, opts ...grpc.CallOption) (*MsgCreateKpiMeasureResponse, error) {
	out := new(MsgCreateKpiMeasureResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/CreateKpiMeasure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateKpiMeasure(ctx context.Context, in *MsgUpdateKpiMeasure, opts ...grpc.CallOption) (*MsgUpdateKpiMeasureResponse, error) {
	out := new(MsgUpdateKpiMeasureResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/UpdateKpiMeasure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteKpiMeasure(ctx context.Context, in *MsgDeleteKpiMeasure, opts ...grpc.CallOption) (*MsgDeleteKpiMeasureResponse, error) {
	out := new(MsgDeleteKpiMeasureResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/DeleteKpiMeasure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateLemDataset(ctx context.Context, in *MsgCreateLemDataset, opts ...grpc.CallOption) (*MsgCreateLemDatasetResponse, error) {
	out := new(MsgCreateLemDatasetResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/CreateLemDataset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateLemDataset(ctx context.Context, in *MsgUpdateLemDataset, opts ...grpc.CallOption) (*MsgUpdateLemDatasetResponse, error) {
	out := new(MsgUpdateLemDatasetResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/UpdateLemDataset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteLemDataset(ctx context.Context, in *MsgDeleteLemDataset, opts ...grpc.CallOption) (*MsgDeleteLemDatasetResponse, error) {
	out := new(MsgDeleteLemDatasetResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/DeleteLemDataset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateDefaultLemPars(ctx context.Context, in *MsgCreateDefaultLemPars, opts ...grpc.CallOption) (*MsgCreateDefaultLemParsResponse, error) {
	out := new(MsgCreateDefaultLemParsResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/CreateDefaultLemPars", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateDefaultLemPars(ctx context.Context, in *MsgUpdateDefaultLemPars, opts ...grpc.CallOption) (*MsgUpdateDefaultLemParsResponse, error) {
	out := new(MsgUpdateDefaultLemParsResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/UpdateDefaultLemPars", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteDefaultLemPars(ctx context.Context, in *MsgDeleteDefaultLemPars, opts ...grpc.CallOption) (*MsgDeleteDefaultLemParsResponse, error) {
	out := new(MsgDeleteDefaultLemParsResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.pm.pm.Msg/DeleteDefaultLemPars", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateDso(context.Context, *MsgCreateDso) (*MsgCreateDsoResponse, error)
	UpdateDso(context.Context, *MsgUpdateDso) (*MsgUpdateDsoResponse, error)
	DeleteDso(context.Context, *MsgDeleteDso) (*MsgDeleteDsoResponse, error)
	CreateAggregator(context.Context, *MsgCreateAggregator) (*MsgCreateAggregatorResponse, error)
	UpdateAggregator(context.Context, *MsgUpdateAggregator) (*MsgUpdateAggregatorResponse, error)
	DeleteAggregator(context.Context, *MsgDeleteAggregator) (*MsgDeleteAggregatorResponse, error)
	CreatePlayer(context.Context, *MsgCreatePlayer) (*MsgCreatePlayerResponse, error)
	UpdatePlayer(context.Context, *MsgUpdatePlayer) (*MsgUpdatePlayerResponse, error)
	DeletePlayer(context.Context, *MsgDeletePlayer) (*MsgDeletePlayerResponse, error)
	CreateLem(context.Context, *MsgCreateLem) (*MsgCreateLemResponse, error)
	UpdateLem(context.Context, *MsgUpdateLem) (*MsgUpdateLemResponse, error)
	DeleteLem(context.Context, *MsgDeleteLem) (*MsgDeleteLemResponse, error)
	CreateLemMeasure(context.Context, *MsgCreateLemMeasure) (*MsgCreateLemMeasureResponse, error)
	UpdateLemMeasure(context.Context, *MsgUpdateLemMeasure) (*MsgUpdateLemMeasureResponse, error)
	DeleteLemMeasure(context.Context, *MsgDeleteLemMeasure) (*MsgDeleteLemMeasureResponse, error)
	CreateSla(context.Context, *MsgCreateSla) (*MsgCreateSlaResponse, error)
	UpdateSla(context.Context, *MsgUpdateSla) (*MsgUpdateSlaResponse, error)
	DeleteSla(context.Context, *MsgDeleteSla) (*MsgDeleteSlaResponse, error)
	CreateKpi(context.Context, *MsgCreateKpi) (*MsgCreateKpiResponse, error)
	UpdateKpi(context.Context, *MsgUpdateKpi) (*MsgUpdateKpiResponse, error)
	DeleteKpi(context.Context, *MsgDeleteKpi) (*MsgDeleteKpiResponse, error)
	CreateKpiMeasure(context.Context, *MsgCreateKpiMeasure) (*MsgCreateKpiMeasureResponse, error)
	UpdateKpiMeasure(context.Context, *MsgUpdateKpiMeasure) (*MsgUpdateKpiMeasureResponse, error)
	DeleteKpiMeasure(context.Context, *MsgDeleteKpiMeasure) (*MsgDeleteKpiMeasureResponse, error)
	CreateLemDataset(context.Context, *MsgCreateLemDataset) (*MsgCreateLemDatasetResponse, error)
	UpdateLemDataset(context.Context, *MsgUpdateLemDataset) (*MsgUpdateLemDatasetResponse, error)
	DeleteLemDataset(context.Context, *MsgDeleteLemDataset) (*MsgDeleteLemDatasetResponse, error)
	CreateDefaultLemPars(context.Context, *MsgCreateDefaultLemPars) (*MsgCreateDefaultLemParsResponse, error)
	UpdateDefaultLemPars(context.Context, *MsgUpdateDefaultLemPars) (*MsgUpdateDefaultLemParsResponse, error)
	DeleteDefaultLemPars(context.Context, *MsgDeleteDefaultLemPars) (*MsgDeleteDefaultLemParsResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateDso(ctx context.Context, req *MsgCreateDso) (*MsgCreateDsoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDso not implemented")
}
func (*UnimplementedMsgServer) UpdateDso(ctx context.Context, req *MsgUpdateDso) (*MsgUpdateDsoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDso not implemented")
}
func (*UnimplementedMsgServer) DeleteDso(ctx context.Context, req *MsgDeleteDso) (*MsgDeleteDsoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDso not implemented")
}
func (*UnimplementedMsgServer) CreateAggregator(ctx context.Context, req *MsgCreateAggregator) (*MsgCreateAggregatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAggregator not implemented")
}
func (*UnimplementedMsgServer) UpdateAggregator(ctx context.Context, req *MsgUpdateAggregator) (*MsgUpdateAggregatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAggregator not implemented")
}
func (*UnimplementedMsgServer) DeleteAggregator(ctx context.Context, req *MsgDeleteAggregator) (*MsgDeleteAggregatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAggregator not implemented")
}
func (*UnimplementedMsgServer) CreatePlayer(ctx context.Context, req *MsgCreatePlayer) (*MsgCreatePlayerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePlayer not implemented")
}
func (*UnimplementedMsgServer) UpdatePlayer(ctx context.Context, req *MsgUpdatePlayer) (*MsgUpdatePlayerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePlayer not implemented")
}
func (*UnimplementedMsgServer) DeletePlayer(ctx context.Context, req *MsgDeletePlayer) (*MsgDeletePlayerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePlayer not implemented")
}
func (*UnimplementedMsgServer) CreateLem(ctx context.Context, req *MsgCreateLem) (*MsgCreateLemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLem not implemented")
}
func (*UnimplementedMsgServer) UpdateLem(ctx context.Context, req *MsgUpdateLem) (*MsgUpdateLemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLem not implemented")
}
func (*UnimplementedMsgServer) DeleteLem(ctx context.Context, req *MsgDeleteLem) (*MsgDeleteLemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLem not implemented")
}
func (*UnimplementedMsgServer) CreateLemMeasure(ctx context.Context, req *MsgCreateLemMeasure) (*MsgCreateLemMeasureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLemMeasure not implemented")
}
func (*UnimplementedMsgServer) UpdateLemMeasure(ctx context.Context, req *MsgUpdateLemMeasure) (*MsgUpdateLemMeasureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLemMeasure not implemented")
}
func (*UnimplementedMsgServer) DeleteLemMeasure(ctx context.Context, req *MsgDeleteLemMeasure) (*MsgDeleteLemMeasureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLemMeasure not implemented")
}
func (*UnimplementedMsgServer) CreateSla(ctx context.Context, req *MsgCreateSla) (*MsgCreateSlaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSla not implemented")
}
func (*UnimplementedMsgServer) UpdateSla(ctx context.Context, req *MsgUpdateSla) (*MsgUpdateSlaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSla not implemented")
}
func (*UnimplementedMsgServer) DeleteSla(ctx context.Context, req *MsgDeleteSla) (*MsgDeleteSlaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSla not implemented")
}
func (*UnimplementedMsgServer) CreateKpi(ctx context.Context, req *MsgCreateKpi) (*MsgCreateKpiResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateKpi not implemented")
}
func (*UnimplementedMsgServer) UpdateKpi(ctx context.Context, req *MsgUpdateKpi) (*MsgUpdateKpiResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateKpi not implemented")
}
func (*UnimplementedMsgServer) DeleteKpi(ctx context.Context, req *MsgDeleteKpi) (*MsgDeleteKpiResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteKpi not implemented")
}
func (*UnimplementedMsgServer) CreateKpiMeasure(ctx context.Context, req *MsgCreateKpiMeasure) (*MsgCreateKpiMeasureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateKpiMeasure not implemented")
}
func (*UnimplementedMsgServer) UpdateKpiMeasure(ctx context.Context, req *MsgUpdateKpiMeasure) (*MsgUpdateKpiMeasureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateKpiMeasure not implemented")
}
func (*UnimplementedMsgServer) DeleteKpiMeasure(ctx context.Context, req *MsgDeleteKpiMeasure) (*MsgDeleteKpiMeasureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteKpiMeasure not implemented")
}
func (*UnimplementedMsgServer) CreateLemDataset(ctx context.Context, req *MsgCreateLemDataset) (*MsgCreateLemDatasetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLemDataset not implemented")
}
func (*UnimplementedMsgServer) UpdateLemDataset(ctx context.Context, req *MsgUpdateLemDataset) (*MsgUpdateLemDatasetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLemDataset not implemented")
}
func (*UnimplementedMsgServer) DeleteLemDataset(ctx context.Context, req *MsgDeleteLemDataset) (*MsgDeleteLemDatasetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLemDataset not implemented")
}
func (*UnimplementedMsgServer) CreateDefaultLemPars(ctx context.Context, req *MsgCreateDefaultLemPars) (*MsgCreateDefaultLemParsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDefaultLemPars not implemented")
}
func (*UnimplementedMsgServer) UpdateDefaultLemPars(ctx context.Context, req *MsgUpdateDefaultLemPars) (*MsgUpdateDefaultLemParsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDefaultLemPars not implemented")
}
func (*UnimplementedMsgServer) DeleteDefaultLemPars(ctx context.Context, req *MsgDeleteDefaultLemPars) (*MsgDeleteDefaultLemParsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDefaultLemPars not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateDso_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateDso)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateDso(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/CreateDso",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateDso(ctx, req.(*MsgCreateDso))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateDso_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateDso)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateDso(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/UpdateDso",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateDso(ctx, req.(*MsgUpdateDso))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteDso_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteDso)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteDso(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/DeleteDso",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteDso(ctx, req.(*MsgDeleteDso))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateAggregator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateAggregator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateAggregator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/CreateAggregator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateAggregator(ctx, req.(*MsgCreateAggregator))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateAggregator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateAggregator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateAggregator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/UpdateAggregator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateAggregator(ctx, req.(*MsgUpdateAggregator))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteAggregator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteAggregator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteAggregator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/DeleteAggregator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteAggregator(ctx, req.(*MsgDeleteAggregator))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreatePlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePlayer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreatePlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/CreatePlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreatePlayer(ctx, req.(*MsgCreatePlayer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdatePlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdatePlayer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdatePlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/UpdatePlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdatePlayer(ctx, req.(*MsgUpdatePlayer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeletePlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeletePlayer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeletePlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/DeletePlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeletePlayer(ctx, req.(*MsgDeletePlayer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateLem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateLem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateLem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/CreateLem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateLem(ctx, req.(*MsgCreateLem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateLem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateLem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateLem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/UpdateLem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateLem(ctx, req.(*MsgUpdateLem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteLem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteLem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteLem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/DeleteLem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteLem(ctx, req.(*MsgDeleteLem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateLemMeasure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateLemMeasure)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateLemMeasure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/CreateLemMeasure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateLemMeasure(ctx, req.(*MsgCreateLemMeasure))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateLemMeasure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateLemMeasure)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateLemMeasure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/UpdateLemMeasure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateLemMeasure(ctx, req.(*MsgUpdateLemMeasure))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteLemMeasure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteLemMeasure)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteLemMeasure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/DeleteLemMeasure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteLemMeasure(ctx, req.(*MsgDeleteLemMeasure))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSla_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSla)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSla(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/CreateSla",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSla(ctx, req.(*MsgCreateSla))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateSla_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateSla)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateSla(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/UpdateSla",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateSla(ctx, req.(*MsgUpdateSla))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteSla_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteSla)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteSla(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/DeleteSla",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteSla(ctx, req.(*MsgDeleteSla))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateKpi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateKpi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateKpi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/CreateKpi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateKpi(ctx, req.(*MsgCreateKpi))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateKpi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateKpi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateKpi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/UpdateKpi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateKpi(ctx, req.(*MsgUpdateKpi))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteKpi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteKpi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteKpi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/DeleteKpi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteKpi(ctx, req.(*MsgDeleteKpi))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateKpiMeasure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateKpiMeasure)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateKpiMeasure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/CreateKpiMeasure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateKpiMeasure(ctx, req.(*MsgCreateKpiMeasure))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateKpiMeasure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateKpiMeasure)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateKpiMeasure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/UpdateKpiMeasure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateKpiMeasure(ctx, req.(*MsgUpdateKpiMeasure))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteKpiMeasure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteKpiMeasure)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteKpiMeasure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/DeleteKpiMeasure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteKpiMeasure(ctx, req.(*MsgDeleteKpiMeasure))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateLemDataset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateLemDataset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateLemDataset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/CreateLemDataset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateLemDataset(ctx, req.(*MsgCreateLemDataset))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateLemDataset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateLemDataset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateLemDataset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/UpdateLemDataset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateLemDataset(ctx, req.(*MsgUpdateLemDataset))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteLemDataset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteLemDataset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteLemDataset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/DeleteLemDataset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteLemDataset(ctx, req.(*MsgDeleteLemDataset))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateDefaultLemPars_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateDefaultLemPars)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateDefaultLemPars(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/CreateDefaultLemPars",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateDefaultLemPars(ctx, req.(*MsgCreateDefaultLemPars))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateDefaultLemPars_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateDefaultLemPars)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateDefaultLemPars(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/UpdateDefaultLemPars",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateDefaultLemPars(ctx, req.(*MsgUpdateDefaultLemPars))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteDefaultLemPars_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteDefaultLemPars)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteDefaultLemPars(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.pm.pm.Msg/DeleteDefaultLemPars",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteDefaultLemPars(ctx, req.(*MsgDeleteDefaultLemPars))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "supsidacdisaac.pm.pm.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDso",
			Handler:    _Msg_CreateDso_Handler,
		},
		{
			MethodName: "UpdateDso",
			Handler:    _Msg_UpdateDso_Handler,
		},
		{
			MethodName: "DeleteDso",
			Handler:    _Msg_DeleteDso_Handler,
		},
		{
			MethodName: "CreateAggregator",
			Handler:    _Msg_CreateAggregator_Handler,
		},
		{
			MethodName: "UpdateAggregator",
			Handler:    _Msg_UpdateAggregator_Handler,
		},
		{
			MethodName: "DeleteAggregator",
			Handler:    _Msg_DeleteAggregator_Handler,
		},
		{
			MethodName: "CreatePlayer",
			Handler:    _Msg_CreatePlayer_Handler,
		},
		{
			MethodName: "UpdatePlayer",
			Handler:    _Msg_UpdatePlayer_Handler,
		},
		{
			MethodName: "DeletePlayer",
			Handler:    _Msg_DeletePlayer_Handler,
		},
		{
			MethodName: "CreateLem",
			Handler:    _Msg_CreateLem_Handler,
		},
		{
			MethodName: "UpdateLem",
			Handler:    _Msg_UpdateLem_Handler,
		},
		{
			MethodName: "DeleteLem",
			Handler:    _Msg_DeleteLem_Handler,
		},
		{
			MethodName: "CreateLemMeasure",
			Handler:    _Msg_CreateLemMeasure_Handler,
		},
		{
			MethodName: "UpdateLemMeasure",
			Handler:    _Msg_UpdateLemMeasure_Handler,
		},
		{
			MethodName: "DeleteLemMeasure",
			Handler:    _Msg_DeleteLemMeasure_Handler,
		},
		{
			MethodName: "CreateSla",
			Handler:    _Msg_CreateSla_Handler,
		},
		{
			MethodName: "UpdateSla",
			Handler:    _Msg_UpdateSla_Handler,
		},
		{
			MethodName: "DeleteSla",
			Handler:    _Msg_DeleteSla_Handler,
		},
		{
			MethodName: "CreateKpi",
			Handler:    _Msg_CreateKpi_Handler,
		},
		{
			MethodName: "UpdateKpi",
			Handler:    _Msg_UpdateKpi_Handler,
		},
		{
			MethodName: "DeleteKpi",
			Handler:    _Msg_DeleteKpi_Handler,
		},
		{
			MethodName: "CreateKpiMeasure",
			Handler:    _Msg_CreateKpiMeasure_Handler,
		},
		{
			MethodName: "UpdateKpiMeasure",
			Handler:    _Msg_UpdateKpiMeasure_Handler,
		},
		{
			MethodName: "DeleteKpiMeasure",
			Handler:    _Msg_DeleteKpiMeasure_Handler,
		},
		{
			MethodName: "CreateLemDataset",
			Handler:    _Msg_CreateLemDataset_Handler,
		},
		{
			MethodName: "UpdateLemDataset",
			Handler:    _Msg_UpdateLemDataset_Handler,
		},
		{
			MethodName: "DeleteLemDataset",
			Handler:    _Msg_DeleteLemDataset_Handler,
		},
		{
			MethodName: "CreateDefaultLemPars",
			Handler:    _Msg_CreateDefaultLemPars_Handler,
		},
		{
			MethodName: "UpdateDefaultLemPars",
			Handler:    _Msg_UpdateDefaultLemPars_Handler,
		},
		{
			MethodName: "DeleteDefaultLemPars",
			Handler:    _Msg_DeleteDefaultLemPars_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pm/tx.proto",
}

func (m *MsgCreateDso) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateDso) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateDso) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Idx) > 0 {
		i -= len(m.Idx)
		copy(dAtA[i:], m.Idx)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Idx)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateDsoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateDsoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateDsoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDso) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDso) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDso) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Idx) > 0 {
		i -= len(m.Idx)
		copy(dAtA[i:], m.Idx)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Idx)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDsoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDsoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDsoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteDso) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteDso) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteDso) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteDsoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteDsoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteDsoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateAggregator) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateAggregator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateAggregator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Idx) > 0 {
		i -= len(m.Idx)
		copy(dAtA[i:], m.Idx)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Idx)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateAggregatorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateAggregatorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateAggregatorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateAggregator) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateAggregator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateAggregator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Idx) > 0 {
		i -= len(m.Idx)
		copy(dAtA[i:], m.Idx)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Idx)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateAggregatorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateAggregatorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateAggregatorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteAggregator) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteAggregator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteAggregator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteAggregatorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteAggregatorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteAggregatorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreatePlayer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePlayer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePlayer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Role) > 0 {
		i -= len(m.Role)
		copy(dAtA[i:], m.Role)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Role)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Idx) > 0 {
		i -= len(m.Idx)
		copy(dAtA[i:], m.Idx)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Idx)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePlayerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePlayerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePlayerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePlayer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePlayer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePlayer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Role) > 0 {
		i -= len(m.Role)
		copy(dAtA[i:], m.Role)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Role)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Idx) > 0 {
		i -= len(m.Idx)
		copy(dAtA[i:], m.Idx)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Idx)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePlayerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePlayerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePlayerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeletePlayer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePlayer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePlayer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeletePlayerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePlayerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePlayerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateLem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateLem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateLem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Players) > 0 {
		for iNdEx := len(m.Players) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Players[iNdEx])
			copy(dAtA[i:], m.Players[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Players[iNdEx])))
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.Params) > 0 {
		for iNdEx := len(m.Params) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Params[iNdEx])
			copy(dAtA[i:], m.Params[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Params[iNdEx])))
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.End != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.End))
		i--
		dAtA[i] = 0x20
	}
	if m.Start != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Start))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateLemResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateLemResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateLemResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateLem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateLem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateLem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Players) > 0 {
		for iNdEx := len(m.Players) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Players[iNdEx])
			copy(dAtA[i:], m.Players[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Players[iNdEx])))
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.Params) > 0 {
		for iNdEx := len(m.Params) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Params[iNdEx])
			copy(dAtA[i:], m.Params[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Params[iNdEx])))
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.End != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.End))
		i--
		dAtA[i] = 0x20
	}
	if m.Start != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Start))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateLemResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateLemResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateLemResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteLem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteLem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteLem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteLemResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteLemResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteLemResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateLemMeasure) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateLemMeasure) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateLemMeasure) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Mu) > 0 {
		i -= len(m.Mu)
		copy(dAtA[i:], m.Mu)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Mu)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x32
	}
	if m.Timestamp != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Signal) > 0 {
		i -= len(m.Signal)
		copy(dAtA[i:], m.Signal)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signal)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Player) > 0 {
		i -= len(m.Player)
		copy(dAtA[i:], m.Player)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Player)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateLemMeasureResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateLemMeasureResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateLemMeasureResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateLemMeasure) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateLemMeasure) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateLemMeasure) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Mu) > 0 {
		i -= len(m.Mu)
		copy(dAtA[i:], m.Mu)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Mu)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x32
	}
	if m.Timestamp != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Signal) > 0 {
		i -= len(m.Signal)
		copy(dAtA[i:], m.Signal)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signal)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Player) > 0 {
		i -= len(m.Player)
		copy(dAtA[i:], m.Player)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Player)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateLemMeasureResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateLemMeasureResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateLemMeasureResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteLemMeasure) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteLemMeasure) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteLemMeasure) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteLemMeasureResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteLemMeasureResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteLemMeasureResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateSla) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSla) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSla) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.End != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.End))
		i--
		dAtA[i] = 0x20
	}
	if m.Start != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Start))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSlaResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSlaResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSlaResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSla) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSla) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSla) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.End != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.End))
		i--
		dAtA[i] = 0x20
	}
	if m.Start != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Start))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSlaResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSlaResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSlaResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSla) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSla) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSla) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSlaResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSlaResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSlaResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateKpi) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateKpi) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateKpi) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Penalty != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Penalty))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Mu) > 0 {
		i -= len(m.Mu)
		copy(dAtA[i:], m.Mu)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Mu)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Limit) > 0 {
		i -= len(m.Limit)
		copy(dAtA[i:], m.Limit)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Limit)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Rule) > 0 {
		i -= len(m.Rule)
		copy(dAtA[i:], m.Rule)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Rule)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Sla) > 0 {
		i -= len(m.Sla)
		copy(dAtA[i:], m.Sla)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sla)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateKpiResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateKpiResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateKpiResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateKpi) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateKpi) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateKpi) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Penalty != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Penalty))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Mu) > 0 {
		i -= len(m.Mu)
		copy(dAtA[i:], m.Mu)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Mu)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Limit) > 0 {
		i -= len(m.Limit)
		copy(dAtA[i:], m.Limit)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Limit)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Rule) > 0 {
		i -= len(m.Rule)
		copy(dAtA[i:], m.Rule)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Rule)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Sla) > 0 {
		i -= len(m.Sla)
		copy(dAtA[i:], m.Sla)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sla)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateKpiResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateKpiResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateKpiResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteKpi) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteKpi) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteKpi) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteKpiResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteKpiResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteKpiResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateKpiMeasure) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateKpiMeasure) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateKpiMeasure) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Mu) > 0 {
		i -= len(m.Mu)
		copy(dAtA[i:], m.Mu)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Mu)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x32
	}
	if m.Timestamp != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Player) > 0 {
		i -= len(m.Player)
		copy(dAtA[i:], m.Player)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Player)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Kpi) > 0 {
		i -= len(m.Kpi)
		copy(dAtA[i:], m.Kpi)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Kpi)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateKpiMeasureResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateKpiMeasureResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateKpiMeasureResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateKpiMeasure) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateKpiMeasure) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateKpiMeasure) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Mu) > 0 {
		i -= len(m.Mu)
		copy(dAtA[i:], m.Mu)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Mu)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x32
	}
	if m.Timestamp != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Player) > 0 {
		i -= len(m.Player)
		copy(dAtA[i:], m.Player)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Player)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Kpi) > 0 {
		i -= len(m.Kpi)
		copy(dAtA[i:], m.Kpi)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Kpi)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateKpiMeasureResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateKpiMeasureResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateKpiMeasureResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteKpiMeasure) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteKpiMeasure) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteKpiMeasure) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteKpiMeasureResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteKpiMeasureResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteKpiMeasureResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateLemDataset) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateLemDataset) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateLemDataset) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PprodForecast) > 0 {
		i -= len(m.PprodForecast)
		copy(dAtA[i:], m.PprodForecast)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PprodForecast)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.PconsForecast) > 0 {
		i -= len(m.PconsForecast)
		copy(dAtA[i:], m.PconsForecast)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PconsForecast)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.PprodMeasure) > 0 {
		i -= len(m.PprodMeasure)
		copy(dAtA[i:], m.PprodMeasure)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PprodMeasure)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.PconsMeasure) > 0 {
		i -= len(m.PconsMeasure)
		copy(dAtA[i:], m.PconsMeasure)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PconsMeasure)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Timestamp != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Player) > 0 {
		i -= len(m.Player)
		copy(dAtA[i:], m.Player)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Player)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateLemDatasetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateLemDatasetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateLemDatasetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateLemDataset) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateLemDataset) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateLemDataset) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PprodForecast) > 0 {
		i -= len(m.PprodForecast)
		copy(dAtA[i:], m.PprodForecast)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PprodForecast)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.PconsForecast) > 0 {
		i -= len(m.PconsForecast)
		copy(dAtA[i:], m.PconsForecast)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PconsForecast)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.PprodMeasure) > 0 {
		i -= len(m.PprodMeasure)
		copy(dAtA[i:], m.PprodMeasure)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PprodMeasure)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.PconsMeasure) > 0 {
		i -= len(m.PconsMeasure)
		copy(dAtA[i:], m.PconsMeasure)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PconsMeasure)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Timestamp != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Player) > 0 {
		i -= len(m.Player)
		copy(dAtA[i:], m.Player)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Player)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateLemDatasetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateLemDatasetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateLemDatasetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteLemDataset) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteLemDataset) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteLemDataset) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteLemDatasetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteLemDatasetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteLemDatasetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateDefaultLemPars) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateDefaultLemPars) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateDefaultLemPars) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Beta) > 0 {
		i -= len(m.Beta)
		copy(dAtA[i:], m.Beta)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Beta)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.PsP2P) > 0 {
		i -= len(m.PsP2P)
		copy(dAtA[i:], m.PsP2P)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PsP2P)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.PbP2P) > 0 {
		i -= len(m.PbP2P)
		copy(dAtA[i:], m.PbP2P)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PbP2P)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PsBAU) > 0 {
		i -= len(m.PsBAU)
		copy(dAtA[i:], m.PsBAU)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PsBAU)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PbBAU) > 0 {
		i -= len(m.PbBAU)
		copy(dAtA[i:], m.PbBAU)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PbBAU)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateDefaultLemParsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateDefaultLemParsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateDefaultLemParsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDefaultLemPars) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDefaultLemPars) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDefaultLemPars) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Beta) > 0 {
		i -= len(m.Beta)
		copy(dAtA[i:], m.Beta)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Beta)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.PsP2P) > 0 {
		i -= len(m.PsP2P)
		copy(dAtA[i:], m.PsP2P)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PsP2P)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.PbP2P) > 0 {
		i -= len(m.PbP2P)
		copy(dAtA[i:], m.PbP2P)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PbP2P)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PsBAU) > 0 {
		i -= len(m.PsBAU)
		copy(dAtA[i:], m.PsBAU)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PsBAU)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PbBAU) > 0 {
		i -= len(m.PbBAU)
		copy(dAtA[i:], m.PbBAU)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PbBAU)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDefaultLemParsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDefaultLemParsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDefaultLemParsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteDefaultLemPars) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteDefaultLemPars) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteDefaultLemPars) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteDefaultLemParsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteDefaultLemParsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteDefaultLemParsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateDso) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Idx)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateDsoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateDso) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Idx)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateDsoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteDso) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteDsoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateAggregator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Idx)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateAggregatorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateAggregator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Idx)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateAggregatorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteAggregator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteAggregatorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreatePlayer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Idx)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Role)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreatePlayerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdatePlayer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Idx)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Role)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdatePlayerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeletePlayer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeletePlayerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateLem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Start != 0 {
		n += 1 + sovTx(uint64(m.Start))
	}
	if m.End != 0 {
		n += 1 + sovTx(uint64(m.End))
	}
	if len(m.Params) > 0 {
		for _, s := range m.Params {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.Players) > 0 {
		for _, s := range m.Players {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgCreateLemResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateLem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Start != 0 {
		n += 1 + sovTx(uint64(m.Start))
	}
	if m.End != 0 {
		n += 1 + sovTx(uint64(m.End))
	}
	if len(m.Params) > 0 {
		for _, s := range m.Params {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.Players) > 0 {
		for _, s := range m.Players {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgUpdateLemResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteLem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteLemResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateLemMeasure) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Player)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Signal)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Timestamp != 0 {
		n += 1 + sovTx(uint64(m.Timestamp))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Mu)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateLemMeasureResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateLemMeasure) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Player)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Signal)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Timestamp != 0 {
		n += 1 + sovTx(uint64(m.Timestamp))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Mu)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateLemMeasureResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteLemMeasure) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteLemMeasureResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateSla) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Start != 0 {
		n += 1 + sovTx(uint64(m.Start))
	}
	if m.End != 0 {
		n += 1 + sovTx(uint64(m.End))
	}
	return n
}

func (m *MsgCreateSlaResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateSla) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Start != 0 {
		n += 1 + sovTx(uint64(m.Start))
	}
	if m.End != 0 {
		n += 1 + sovTx(uint64(m.End))
	}
	return n
}

func (m *MsgUpdateSlaResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteSla) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteSlaResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateKpi) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Sla)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Rule)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Limit)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Mu)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Penalty != 0 {
		n += 1 + sovTx(uint64(m.Penalty))
	}
	return n
}

func (m *MsgCreateKpiResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateKpi) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Sla)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Rule)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Limit)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Mu)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Penalty != 0 {
		n += 1 + sovTx(uint64(m.Penalty))
	}
	return n
}

func (m *MsgUpdateKpiResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteKpi) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteKpiResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateKpiMeasure) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Kpi)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Player)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Timestamp != 0 {
		n += 1 + sovTx(uint64(m.Timestamp))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Mu)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateKpiMeasureResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateKpiMeasure) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Kpi)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Player)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Timestamp != 0 {
		n += 1 + sovTx(uint64(m.Timestamp))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Mu)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateKpiMeasureResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteKpiMeasure) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteKpiMeasureResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateLemDataset) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Player)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Timestamp != 0 {
		n += 1 + sovTx(uint64(m.Timestamp))
	}
	l = len(m.PconsMeasure)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PprodMeasure)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PconsForecast)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PprodForecast)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateLemDatasetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateLemDataset) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Player)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Timestamp != 0 {
		n += 1 + sovTx(uint64(m.Timestamp))
	}
	l = len(m.PconsMeasure)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PprodMeasure)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PconsForecast)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PprodForecast)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateLemDatasetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteLemDataset) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteLemDatasetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateDefaultLemPars) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PbBAU)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PsBAU)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PbP2P)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PsP2P)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Beta)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateDefaultLemParsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateDefaultLemPars) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PbBAU)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PsBAU)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PbP2P)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PsP2P)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Beta)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateDefaultLemParsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteDefaultLemPars) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteDefaultLemParsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateDso) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateDso: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateDso: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Idx", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Idx = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateDsoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateDsoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateDsoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDso) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDso: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDso: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Idx", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Idx = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDsoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDsoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDsoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteDso) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteDso: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteDso: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteDsoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteDsoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteDsoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateAggregator) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAggregator: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAggregator: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Idx", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Idx = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateAggregatorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAggregatorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAggregatorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateAggregator) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateAggregator: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateAggregator: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Idx", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Idx = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateAggregatorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateAggregatorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateAggregatorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteAggregator) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteAggregator: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteAggregator: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteAggregatorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteAggregatorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteAggregatorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePlayer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePlayer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePlayer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Idx", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Idx = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Role", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Role = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePlayerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePlayerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePlayerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePlayer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePlayer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePlayer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Idx", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Idx = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Role", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Role = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePlayerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePlayerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePlayerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePlayer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePlayer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePlayer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePlayerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePlayerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePlayerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateLem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateLem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateLem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Start", wireType)
			}
			m.Start = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Start |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field End", wireType)
			}
			m.End = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.End |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Params = append(m.Params, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Players", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Players = append(m.Players, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateLemResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateLemResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateLemResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateLem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateLem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateLem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Start", wireType)
			}
			m.Start = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Start |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field End", wireType)
			}
			m.End = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.End |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Params = append(m.Params, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Players", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Players = append(m.Players, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateLemResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateLemResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateLemResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteLem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteLem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteLem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteLemResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteLemResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteLemResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateLemMeasure) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateLemMeasure: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateLemMeasure: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Player", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Player = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signal", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signal = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mu", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mu = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateLemMeasureResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateLemMeasureResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateLemMeasureResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateLemMeasure) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateLemMeasure: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateLemMeasure: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Player", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Player = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signal", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signal = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mu", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mu = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateLemMeasureResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateLemMeasureResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateLemMeasureResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteLemMeasure) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteLemMeasure: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteLemMeasure: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteLemMeasureResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteLemMeasureResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteLemMeasureResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSla) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSla: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSla: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Start", wireType)
			}
			m.Start = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Start |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field End", wireType)
			}
			m.End = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.End |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSlaResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSlaResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSlaResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSla) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSla: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSla: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Start", wireType)
			}
			m.Start = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Start |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field End", wireType)
			}
			m.End = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.End |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSlaResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSlaResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSlaResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSla) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSla: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSla: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSlaResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSlaResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSlaResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateKpi) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateKpi: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateKpi: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sla", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sla = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rule", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rule = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Limit = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mu", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mu = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Penalty", wireType)
			}
			m.Penalty = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Penalty |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateKpiResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateKpiResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateKpiResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateKpi) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateKpi: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateKpi: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sla", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sla = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rule", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rule = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Limit = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mu", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mu = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Penalty", wireType)
			}
			m.Penalty = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Penalty |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateKpiResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateKpiResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateKpiResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteKpi) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteKpi: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteKpi: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteKpiResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteKpiResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteKpiResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateKpiMeasure) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateKpiMeasure: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateKpiMeasure: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Kpi", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Kpi = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Player", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Player = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mu", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mu = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateKpiMeasureResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateKpiMeasureResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateKpiMeasureResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateKpiMeasure) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateKpiMeasure: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateKpiMeasure: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Kpi", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Kpi = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Player", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Player = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mu", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mu = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateKpiMeasureResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateKpiMeasureResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateKpiMeasureResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteKpiMeasure) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteKpiMeasure: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteKpiMeasure: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteKpiMeasureResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteKpiMeasureResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteKpiMeasureResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateLemDataset) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateLemDataset: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateLemDataset: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Player", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Player = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PconsMeasure", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PconsMeasure = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PprodMeasure", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PprodMeasure = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PconsForecast", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PconsForecast = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PprodForecast", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PprodForecast = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateLemDatasetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateLemDatasetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateLemDatasetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateLemDataset) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateLemDataset: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateLemDataset: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Player", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Player = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PconsMeasure", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PconsMeasure = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PprodMeasure", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PprodMeasure = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PconsForecast", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PconsForecast = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PprodForecast", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PprodForecast = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateLemDatasetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateLemDatasetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateLemDatasetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteLemDataset) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteLemDataset: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteLemDataset: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteLemDatasetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteLemDatasetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteLemDatasetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateDefaultLemPars) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateDefaultLemPars: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateDefaultLemPars: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PbBAU", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PbBAU = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PsBAU", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PsBAU = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PbP2P", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PbP2P = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PsP2P", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PsP2P = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Beta", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Beta = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateDefaultLemParsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateDefaultLemParsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateDefaultLemParsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDefaultLemPars) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDefaultLemPars: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDefaultLemPars: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PbBAU", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PbBAU = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PsBAU", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PsBAU = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PbP2P", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PbP2P = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PsP2P", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PsP2P = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Beta", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Beta = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDefaultLemParsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDefaultLemParsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDefaultLemParsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteDefaultLemPars) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteDefaultLemPars: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteDefaultLemPars: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteDefaultLemParsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteDefaultLemParsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteDefaultLemParsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
