// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pm/grid_state.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type GridState struct {
	Index     string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	Grid      string `protobuf:"bytes,2,opt,name=grid,proto3" json:"grid,omitempty"`
	Timestamp int32  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	State     string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Creator   string `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *GridState) Reset()         { *m = GridState{} }
func (m *GridState) String() string { return proto.CompactTextString(m) }
func (*GridState) ProtoMessage()    {}
func (*GridState) Descriptor() ([]byte, []int) {
	return fileDescriptor_c91248cb2818c9f9, []int{0}
}
func (m *GridState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GridState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GridState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GridState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GridState.Merge(m, src)
}
func (m *GridState) XXX_Size() int {
	return m.Size()
}
func (m *GridState) XXX_DiscardUnknown() {
	xxx_messageInfo_GridState.DiscardUnknown(m)
}

var xxx_messageInfo_GridState proto.InternalMessageInfo

func (m *GridState) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *GridState) GetGrid() string {
	if m != nil {
		return m.Grid
	}
	return ""
}

func (m *GridState) GetTimestamp() int32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *GridState) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *GridState) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*GridState)(nil), "supsidacdisaac.pm.pm.GridState")
}

func init() { proto.RegisterFile("pm/grid_state.proto", fileDescriptor_c91248cb2818c9f9) }

var fileDescriptor_c91248cb2818c9f9 = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8f, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x63, 0x68, 0x40, 0xf1, 0x68, 0x3a, 0x78, 0x40, 0x56, 0xc5, 0xd4, 0x25, 0xf1, 0xc0,
	0xc0, 0xce, 0xc2, 0x4c, 0xd9, 0x58, 0x90, 0x6b, 0x5b, 0xc5, 0x83, 0xf1, 0xc9, 0xbe, 0x4a, 0xed,
	0xcc, 0x0b, 0xf0, 0x58, 0x8c, 0x1d, 0x19, 0x51, 0xf2, 0x22, 0xc8, 0x17, 0xa1, 0x2e, 0xa7, 0xfb,
	0x7f, 0x9d, 0xbe, 0xd3, 0xc7, 0x6f, 0x20, 0xea, 0x5d, 0x0e, 0xee, 0xad, 0xa0, 0x41, 0x3f, 0x40,
	0x4e, 0x98, 0xc4, 0xb2, 0xec, 0xa1, 0x04, 0x67, 0xac, 0x0b, 0xc5, 0x18, 0x3b, 0x40, 0x1c, 0x20,
	0xde, 0x7d, 0x32, 0xde, 0x3d, 0xe5, 0xe0, 0x5e, 0xea, 0xa5, 0x58, 0xf2, 0x36, 0x7c, 0x38, 0x7f,
	0x90, 0x6c, 0xc5, 0xd6, 0xdd, 0x66, 0x0e, 0x42, 0xf0, 0x45, 0xa5, 0xc9, 0x0b, 0x2a, 0x69, 0x17,
	0xb7, 0xbc, 0xc3, 0x10, 0x7d, 0x41, 0x13, 0x41, 0x5e, 0xae, 0xd8, 0xba, 0xdd, 0x9c, 0x8b, 0xca,
	0xa1, 0xd7, 0x72, 0x31, 0x73, 0x28, 0x08, 0xc9, 0xaf, 0x6d, 0xf6, 0x06, 0x53, 0x96, 0x2d, 0xf5,
	0xff, 0xf1, 0xf1, 0xf9, 0x7b, 0x54, 0xec, 0x34, 0x2a, 0xf6, 0x3b, 0x2a, 0xf6, 0x35, 0xa9, 0xe6,
	0x34, 0xa9, 0xe6, 0x67, 0x52, 0xcd, 0xeb, 0xc3, 0x2e, 0xe0, 0xfb, 0x7e, 0x3b, 0xd8, 0x14, 0x35,
	0x09, 0xf4, 0xd5, 0xa0, 0x27, 0x05, 0x0d, 0x26, 0x07, 0x3c, 0xf6, 0x36, 0x95, 0x98, 0x8a, 0x86,
	0xa8, 0x0f, 0x75, 0xe0, 0x11, 0x7c, 0xd9, 0x5e, 0x91, 0xf5, 0xfd, 0x5f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x61, 0x02, 0x62, 0x03, 0x0c, 0x01, 0x00, 0x00,
}

func (m *GridState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GridState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GridState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintGridState(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.State) > 0 {
		i -= len(m.State)
		copy(dAtA[i:], m.State)
		i = encodeVarintGridState(dAtA, i, uint64(len(m.State)))
		i--
		dAtA[i] = 0x22
	}
	if m.Timestamp != 0 {
		i = encodeVarintGridState(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Grid) > 0 {
		i -= len(m.Grid)
		copy(dAtA[i:], m.Grid)
		i = encodeVarintGridState(dAtA, i, uint64(len(m.Grid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintGridState(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintGridState(dAtA []byte, offset int, v uint64) int {
	offset -= sovGridState(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GridState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovGridState(uint64(l))
	}
	l = len(m.Grid)
	if l > 0 {
		n += 1 + l + sovGridState(uint64(l))
	}
	if m.Timestamp != 0 {
		n += 1 + sovGridState(uint64(m.Timestamp))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovGridState(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovGridState(uint64(l))
	}
	return n
}

func sovGridState(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGridState(x uint64) (n int) {
	return sovGridState(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GridState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGridState
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GridState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GridState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGridState
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGridState
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGridState
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Grid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGridState
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGridState
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGridState
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Grid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGridState
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGridState
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGridState
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGridState
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGridState
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGridState
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGridState
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGridState(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGridState
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGridState(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGridState
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGridState
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGridState
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGridState
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGridState
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGridState
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGridState        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGridState          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGridState = fmt.Errorf("proto: unexpected end of group")
)
