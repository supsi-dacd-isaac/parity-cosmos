// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pm/kpi_features.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type KpiFeatures struct {
	Index   string   `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	Sla     string   `protobuf:"bytes,2,opt,name=sla,proto3" json:"sla,omitempty"`
	Rule    string   `protobuf:"bytes,3,opt,name=rule,proto3" json:"rule,omitempty"`
	Limit   string   `protobuf:"bytes,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Mu      string   `protobuf:"bytes,5,opt,name=mu,proto3" json:"mu,omitempty"`
	Penalty int32    `protobuf:"varint,6,opt,name=penalty,proto3" json:"penalty,omitempty"`
	Players []string `protobuf:"bytes,7,rep,name=players,proto3" json:"players,omitempty"`
	Creator string   `protobuf:"bytes,8,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *KpiFeatures) Reset()         { *m = KpiFeatures{} }
func (m *KpiFeatures) String() string { return proto.CompactTextString(m) }
func (*KpiFeatures) ProtoMessage()    {}
func (*KpiFeatures) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ee7865cd7d8083f, []int{0}
}
func (m *KpiFeatures) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *KpiFeatures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_KpiFeatures.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *KpiFeatures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KpiFeatures.Merge(m, src)
}
func (m *KpiFeatures) XXX_Size() int {
	return m.Size()
}
func (m *KpiFeatures) XXX_DiscardUnknown() {
	xxx_messageInfo_KpiFeatures.DiscardUnknown(m)
}

var xxx_messageInfo_KpiFeatures proto.InternalMessageInfo

func (m *KpiFeatures) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *KpiFeatures) GetSla() string {
	if m != nil {
		return m.Sla
	}
	return ""
}

func (m *KpiFeatures) GetRule() string {
	if m != nil {
		return m.Rule
	}
	return ""
}

func (m *KpiFeatures) GetLimit() string {
	if m != nil {
		return m.Limit
	}
	return ""
}

func (m *KpiFeatures) GetMu() string {
	if m != nil {
		return m.Mu
	}
	return ""
}

func (m *KpiFeatures) GetPenalty() int32 {
	if m != nil {
		return m.Penalty
	}
	return 0
}

func (m *KpiFeatures) GetPlayers() []string {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *KpiFeatures) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*KpiFeatures)(nil), "supsidacdisaac.pm.pm.KpiFeatures")
}

func init() { proto.RegisterFile("pm/kpi_features.proto", fileDescriptor_1ee7865cd7d8083f) }

var fileDescriptor_1ee7865cd7d8083f = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x90, 0xbf, 0x4e, 0xfb, 0x30,
	0x1c, 0xc4, 0xe3, 0xa4, 0x69, 0x7f, 0xf5, 0x4f, 0x42, 0xc8, 0x2a, 0x92, 0x27, 0x2b, 0x62, 0xca,
	0x92, 0x64, 0x60, 0x60, 0x67, 0x60, 0x61, 0x22, 0x23, 0x0b, 0x72, 0x13, 0x03, 0x16, 0x71, 0xfd,
	0x95, 0xff, 0x48, 0xcd, 0x5b, 0xf0, 0x42, 0xec, 0x8c, 0x1d, 0x19, 0x51, 0xf2, 0x22, 0xc8, 0x2e,
	0x59, 0xac, 0xfb, 0xdc, 0xf9, 0x2c, 0x9d, 0xf1, 0x15, 0xa8, 0xe6, 0x1d, 0xe4, 0xf3, 0x8b, 0xe0,
	0xce, 0x1b, 0x61, 0x6b, 0x30, 0xda, 0x69, 0xb2, 0xb3, 0x1e, 0xac, 0xec, 0x79, 0xd7, 0x4b, 0xcb,
	0x79, 0x57, 0x83, 0xaa, 0x41, 0x5d, 0x7f, 0x22, 0xfc, 0xff, 0x01, 0xe4, 0xfd, 0xdf, 0x5d, 0xb2,
	0xc3, 0xb9, 0x3c, 0xf4, 0xe2, 0x48, 0x51, 0x81, 0xca, 0x6d, 0x7b, 0x06, 0x72, 0x89, 0x33, 0x3b,
	0x70, 0x9a, 0x46, 0x2f, 0x48, 0x42, 0xf0, 0xca, 0xf8, 0x41, 0xd0, 0x2c, 0x5a, 0x51, 0x87, 0xee,
	0x20, 0x95, 0x74, 0x74, 0x75, 0xee, 0x46, 0x20, 0x17, 0x38, 0x55, 0x9e, 0xe6, 0xd1, 0x4a, 0x95,
	0x27, 0x14, 0x6f, 0x40, 0x1c, 0xf8, 0xe0, 0x46, 0xba, 0x2e, 0x50, 0x99, 0xb7, 0x0b, 0xc6, 0x64,
	0xe0, 0xa3, 0x30, 0x96, 0x6e, 0x8a, 0xac, 0xdc, 0xb6, 0x0b, 0x86, 0xa4, 0x33, 0x82, 0x3b, 0x6d,
	0xe8, 0xbf, 0xf8, 0xd0, 0x82, 0x77, 0x8f, 0x5f, 0x13, 0x43, 0xa7, 0x89, 0xa1, 0x9f, 0x89, 0xa1,
	0x8f, 0x99, 0x25, 0xa7, 0x99, 0x25, 0xdf, 0x33, 0x4b, 0x9e, 0x6e, 0x5f, 0xa5, 0x7b, 0xf3, 0xfb,
	0xba, 0xd3, 0xaa, 0x89, 0xd3, 0xab, 0xb0, 0xbd, 0x8a, 0xe3, 0x1b, 0xe0, 0x46, 0xba, 0xb1, 0xea,
	0xb4, 0x55, 0xda, 0x36, 0xa0, 0x9a, 0x63, 0x38, 0xdc, 0x08, 0xc2, 0xee, 0xd7, 0xf1, 0xbf, 0x6e,
	0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0xae, 0x6e, 0xf6, 0xa8, 0x48, 0x01, 0x00, 0x00,
}

func (m *KpiFeatures) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *KpiFeatures) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *KpiFeatures) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintKpiFeatures(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Players) > 0 {
		for iNdEx := len(m.Players) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Players[iNdEx])
			copy(dAtA[i:], m.Players[iNdEx])
			i = encodeVarintKpiFeatures(dAtA, i, uint64(len(m.Players[iNdEx])))
			i--
			dAtA[i] = 0x3a
		}
	}
	if m.Penalty != 0 {
		i = encodeVarintKpiFeatures(dAtA, i, uint64(m.Penalty))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Mu) > 0 {
		i -= len(m.Mu)
		copy(dAtA[i:], m.Mu)
		i = encodeVarintKpiFeatures(dAtA, i, uint64(len(m.Mu)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Limit) > 0 {
		i -= len(m.Limit)
		copy(dAtA[i:], m.Limit)
		i = encodeVarintKpiFeatures(dAtA, i, uint64(len(m.Limit)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Rule) > 0 {
		i -= len(m.Rule)
		copy(dAtA[i:], m.Rule)
		i = encodeVarintKpiFeatures(dAtA, i, uint64(len(m.Rule)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Sla) > 0 {
		i -= len(m.Sla)
		copy(dAtA[i:], m.Sla)
		i = encodeVarintKpiFeatures(dAtA, i, uint64(len(m.Sla)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintKpiFeatures(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintKpiFeatures(dAtA []byte, offset int, v uint64) int {
	offset -= sovKpiFeatures(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *KpiFeatures) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovKpiFeatures(uint64(l))
	}
	l = len(m.Sla)
	if l > 0 {
		n += 1 + l + sovKpiFeatures(uint64(l))
	}
	l = len(m.Rule)
	if l > 0 {
		n += 1 + l + sovKpiFeatures(uint64(l))
	}
	l = len(m.Limit)
	if l > 0 {
		n += 1 + l + sovKpiFeatures(uint64(l))
	}
	l = len(m.Mu)
	if l > 0 {
		n += 1 + l + sovKpiFeatures(uint64(l))
	}
	if m.Penalty != 0 {
		n += 1 + sovKpiFeatures(uint64(m.Penalty))
	}
	if len(m.Players) > 0 {
		for _, s := range m.Players {
			l = len(s)
			n += 1 + l + sovKpiFeatures(uint64(l))
		}
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovKpiFeatures(uint64(l))
	}
	return n
}

func sovKpiFeatures(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozKpiFeatures(x uint64) (n int) {
	return sovKpiFeatures(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *KpiFeatures) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKpiFeatures
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: KpiFeatures: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: KpiFeatures: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKpiFeatures
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKpiFeatures
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKpiFeatures
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sla", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKpiFeatures
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKpiFeatures
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKpiFeatures
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sla = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rule", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKpiFeatures
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKpiFeatures
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKpiFeatures
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rule = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKpiFeatures
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKpiFeatures
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKpiFeatures
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Limit = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mu", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKpiFeatures
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKpiFeatures
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKpiFeatures
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mu = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Penalty", wireType)
			}
			m.Penalty = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKpiFeatures
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Penalty |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Players", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKpiFeatures
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKpiFeatures
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKpiFeatures
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Players = append(m.Players, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKpiFeatures
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKpiFeatures
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKpiFeatures
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKpiFeatures(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthKpiFeatures
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipKpiFeatures(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowKpiFeatures
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowKpiFeatures
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowKpiFeatures
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthKpiFeatures
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupKpiFeatures
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthKpiFeatures
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthKpiFeatures        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowKpiFeatures          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupKpiFeatures = fmt.Errorf("proto: unexpected end of group")
)
